{"ast":null,"code":"var _jsxFileName = \"/home/riya/social-monitoring/src/Socket.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet endPoint = \"http://localhost:5000\";\nlet socket = io.connect(`${endPoint}`);\n\nconst Sockett = () => {\n  _s();\n\n  const [messages, setMessages] = useState([\"Hello And Welcome\"]);\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    getMessages();\n  }, [messages.length]);\n\n  const getMessages = () => {\n    socket.on(\"message\", msg => {\n      //   let allMessages = messages;\n      //   allMessages.push(msg);\n      //   setMessages(allMessages);\n      setMessages([...messages, msg]);\n    });\n  }; // On Change\n\n\n  const onChange = e => {\n    setMessage(e.target.value);\n  }; // On Click\n\n\n  const onClick = () => {\n    if (message !== \"\") {\n      socket.emit(\"message\", message);\n      setMessage(\"\");\n    } else {\n      alert(\"Please Add A Message\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [messages.length > 0 && messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: message,\n      name: \"message\",\n      onChange: e => onChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClick(),\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Sockett, \"h4DKqF3jy+s7yrUm1Qf9jW4GqHc=\");\n\n_c = Sockett;\nexport default Sockett;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sockett\");","map":{"version":3,"sources":["/home/riya/social-monitoring/src/Socket.js"],"names":["React","useEffect","useState","io","endPoint","socket","connect","Sockett","messages","setMessages","message","setMessage","getMessages","length","on","msg","onChange","e","target","value","onClick","emit","alert","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,IAAIC,QAAQ,GAAG,uBAAf;AACA,IAAIC,MAAM,GAAGF,EAAE,CAACG,OAAH,CAAY,GAAEF,QAAS,EAAvB,CAAb;;AAGA,MAAMG,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,CAAC,mBAAD,CAAD,CAAxC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACJ,QAAQ,CAACK,MAAV,CAFM,CAAT;;AAIA,QAAMD,WAAW,GAAG,MAAM;AACxBP,IAAAA,MAAM,CAACS,EAAP,CAAU,SAAV,EAAqBC,GAAG,IAAI;AAC1B;AACA;AACA;AACAN,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcO,GAAd,CAAD,CAAX;AACD,KALD;AAMD,GAPD,CARkB,CAiBlB;;;AACA,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AACpBN,IAAAA,UAAU,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,GAFD,CAlBkB,CAsBlB;;;AACA,QAAMC,OAAO,GAAG,MAAM;AACpB,QAAIV,OAAO,KAAK,EAAhB,EAAoB;AAClBL,MAAAA,MAAM,CAACgB,IAAP,CAAY,SAAZ,EAAuBX,OAAvB;AACAC,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD,KAHD,MAGO;AACLW,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;AACF,GAPD;;AASA,sBACE;AAAA,eACGd,QAAQ,CAACK,MAAT,GAAkB,CAAlB,IACCL,QAAQ,CAACe,GAAT,CAAaR,GAAG,iBACd;AAAA,6BACE;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,CAFJ,eAOE;AAAO,MAAA,KAAK,EAAEL,OAAd;AAAuB,MAAA,IAAI,EAAC,SAA5B;AAAsC,MAAA,QAAQ,EAAEO,CAAC,IAAID,QAAQ,CAACC,CAAD;AAA7D;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAQ,MAAA,OAAO,EAAE,MAAMG,OAAO,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA5CH;;GAAMb,O;;KAAAA,O;AA8CJ,eAAeA,OAAf","sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport io from \"socket.io-client\";\n\nlet endPoint = \"http://localhost:5000\";\nlet socket = io.connect(`${endPoint}`);\n\n\nconst Sockett = () => {\n    const [messages, setMessages] = useState([\"Hello And Welcome\"]);\n    const [message, setMessage] = useState(\"\");\n  \n    useEffect(() => {\n      getMessages();\n    }, [messages.length]);\n  \n    const getMessages = () => {\n      socket.on(\"message\", msg => {\n        //   let allMessages = messages;\n        //   allMessages.push(msg);\n        //   setMessages(allMessages);\n        setMessages([...messages, msg]);\n      });\n    };\n  \n    // On Change\n    const onChange = e => {\n      setMessage(e.target.value);\n    };\n  \n    // On Click\n    const onClick = () => {\n      if (message !== \"\") {\n        socket.emit(\"message\", message);\n        setMessage(\"\");\n      } else {\n        alert(\"Please Add A Message\");\n      }\n    };\n  \n    return (\n      <div>\n        {messages.length > 0 &&\n          messages.map(msg => (\n            <div>\n              <p>{msg}</p>\n            </div>\n          ))}\n        <input value={message} name=\"message\" onChange={e => onChange(e)} />\n        <button onClick={() => onClick()}>Send Message</button>\n      </div>\n    );\n  };\n  \n  export default Sockett;"]},"metadata":{},"sourceType":"module"}