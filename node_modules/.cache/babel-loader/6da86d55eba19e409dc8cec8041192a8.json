{"ast":null,"code":"import { OUTREACH_SUCCESS, ERROR, SENTIMENT_SUCCESS, BUZZ_SUCCESS, WORDLCLOUD_SUCCESS, MENTIONS_SUCCESS, LOADING, GET_IDENTITY } from \"../../helpers/constants\";\n\nconst dashboard = (state, {\n  payload,\n  type\n}) => {\n  switch (type) {\n    case OUTREACH_SUCCESS:\n      console.log(\"outreach payload->\", payload.data);\n      return { ...state,\n        outreachData: payload.data,\n        isloading: false\n      };\n\n    case SENTIMENT_SUCCESS:\n      return { ...state,\n        sentimentData: {\n          line: payload.data.line,\n          pie: payload.data.pie,\n          isloading: false\n        }\n      };\n\n    case BUZZ_SUCCESS:\n      return { ...state,\n        buzzData: payload.data,\n        isloading: false\n      };\n\n    case WORDLCLOUD_SUCCESS:\n      return { ...state,\n        wordCloudData: payload.data,\n        isloading: false\n      };\n\n    case MENTIONS_SUCCESS:\n      return { ...state,\n        mentionsData: payload.data,\n        isloading: false\n      };\n\n    case GET_IDENTITY:\n      return { ...state,\n        identity: payload.data,\n        isloading: false\n      };\n\n    case LOADING:\n      console.log(\"LOADING DATA!:\", state);\n      return { ...state,\n        isloading: true\n      };\n\n    case ERROR:\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default dashboard;","map":{"version":3,"sources":["/home/riya/social-monitoring/src/context/reducers/dashboard.js"],"names":["OUTREACH_SUCCESS","ERROR","SENTIMENT_SUCCESS","BUZZ_SUCCESS","WORDLCLOUD_SUCCESS","MENTIONS_SUCCESS","LOADING","GET_IDENTITY","dashboard","state","payload","type","console","log","data","outreachData","isloading","sentimentData","line","pie","buzzData","wordCloudData","mentionsData","identity"],"mappings":"AAAA,SACEA,gBADF,EAEEC,KAFF,EAGEC,iBAHF,EAIEC,YAJF,EAKEC,kBALF,EAMEC,gBANF,EAOEC,OAPF,EAQEC,YARF,QASO,yBATP;;AAWA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQ;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAR,KAA8B;AAC9C,UAAQA,IAAR;AACE,SAAKX,gBAAL;AACEY,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCH,OAAO,CAACI,IAA1C;AACA,aAAO,EACL,GAAGL,KADE;AAELM,QAAAA,YAAY,EAAEL,OAAO,CAACI,IAFjB;AAGLE,QAAAA,SAAS,EAAE;AAHN,OAAP;;AAKF,SAAKd,iBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELQ,QAAAA,aAAa,EAAE;AACbC,UAAAA,IAAI,EAAER,OAAO,CAACI,IAAR,CAAaI,IADN;AAEbC,UAAAA,GAAG,EAAET,OAAO,CAACI,IAAR,CAAaK,GAFL;AAGbH,UAAAA,SAAS,EAAE;AAHE;AAFV,OAAP;;AAQF,SAAKb,YAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELW,QAAAA,QAAQ,EAAEV,OAAO,CAACI,IAFb;AAGLE,QAAAA,SAAS,EAAE;AAHN,OAAP;;AAKF,SAAKZ,kBAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELY,QAAAA,aAAa,EAAEX,OAAO,CAACI,IAFlB;AAGLE,QAAAA,SAAS,EAAE;AAHN,OAAP;;AAKF,SAAKX,gBAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELa,QAAAA,YAAY,EAAEZ,OAAO,CAACI,IAFjB;AAGLE,QAAAA,SAAS,EAAE;AAHN,OAAP;;AAKF,SAAKT,YAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELc,QAAAA,QAAQ,EAAEb,OAAO,CAACI,IAFb;AAGLE,QAAAA,SAAS,EAAE;AAHN,OAAP;;AAKF,SAAKV,OAAL;AACEM,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,KAA9B;AACA,aAAO,EACL,GAAGA,KADE;AAELO,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKf,KAAL;AACE,aAAO,EACL,GAAGQ;AADE,OAAP;;AAGF;AACE,aAAOA,KAAP;AApDJ;AAsDD,CAvDD;;AAyDA,eAAeD,SAAf","sourcesContent":["import {\n  OUTREACH_SUCCESS,\n  ERROR,\n  SENTIMENT_SUCCESS,\n  BUZZ_SUCCESS,\n  WORDLCLOUD_SUCCESS,\n  MENTIONS_SUCCESS,\n  LOADING,\n  GET_IDENTITY\n} from \"../../helpers/constants\";\n\nconst dashboard = (state, { payload, type }) => {\n  switch (type) {\n    case OUTREACH_SUCCESS:\n      console.log(\"outreach payload->\", payload.data)\n      return {\n        ...state,\n        outreachData: payload.data,\n        isloading: false\n      }\n    case SENTIMENT_SUCCESS:\n      return {\n        ...state,\n        sentimentData: {\n          line: payload.data.line,\n          pie: payload.data.pie,\n          isloading: false\n        }\n      }\n    case BUZZ_SUCCESS:\n      return {\n        ...state,\n        buzzData: payload.data,\n        isloading: false\n      }\n    case WORDLCLOUD_SUCCESS:\n      return {\n        ...state,\n        wordCloudData: payload.data,\n        isloading: false\n      }\n    case MENTIONS_SUCCESS:\n      return {\n        ...state,\n        mentionsData: payload.data,\n        isloading: false\n      }\n    case GET_IDENTITY:\n      return {\n        ...state,\n        identity: payload.data,\n        isloading: false\n      }\n    case LOADING:\n      console.log(\"LOADING DATA!:\", state)\n      return {\n        ...state,\n        isloading: true\n      }\n    case ERROR:\n      return {\n        ...state\n      }\n    default:\n      return state;\n  }\n};\n\nexport default dashboard;"]},"metadata":{},"sourceType":"module"}