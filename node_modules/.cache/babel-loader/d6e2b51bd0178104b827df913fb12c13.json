{"ast":null,"code":"import axios from \"axios\";\nimport axiosInstance from \"../../helpers/AxiosInstance\";\nimport { LOGIN_LOADING, LOGIN_SUCCESS, LOGIN_ERROR } from \"../../helpers/constants\";\nimport { useHistory } from \"react-router-dom\";\nexport const login = ({\n  email,\n  password\n}) => {\n  var _s = $RefreshSig$();\n\n  return _s(dispatch => {\n    _s();\n\n    const history = useHistory();\n    dispatch({\n      type: LOGIN_LOADING\n    });\n    const options = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    };\n    console.log(email, password);\n    axios.post(\"http://127.0.0.1:5000/auth\", JSON.stringify({\n      username: email,\n      password: password\n    }), options).then(res => {\n      console.log(\"succcesss bitccchh!!!\", res);\n      localStorage.token = res.data.token;\n      history.push(\"/dashboard\");\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n    }).catch(err => {\n      console.log(\"error bitccchh!!!\", err);\n      dispatch({\n        type: LOGIN_ERROR,\n        payload: err.response ? err.response.data : \"COULD NOT CONNECT\"\n      });\n    });\n  }, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n    return [useHistory];\n  });\n};","map":{"version":3,"sources":["/home/riya/social-monitoring/src/context/actions/auth.js"],"names":["axios","axiosInstance","LOGIN_LOADING","LOGIN_SUCCESS","LOGIN_ERROR","useHistory","login","email","password","dispatch","history","type","options","headers","Accept","console","log","post","JSON","stringify","username","then","res","localStorage","token","data","push","payload","catch","err","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,WAHF,QAIO,yBAJP;AAKA,SAASC,UAAT,QAA2B,kBAA3B;AAIA,OAAO,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD;AAAA;;AAAA,YAA0BC,QAAD,IAAc;AAAA;;AAC1D,UAAMC,OAAO,GAAGL,UAAU,EAA1B;AAEAI,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAET;AADC,KAAD,CAAR;AAGA,UAAMU,OAAO,GAAG;AACdC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD;AADK,KAAhB;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ,EAAmBC,QAAnB;AAEAR,IAAAA,KAAK,CAACiB,IAAN,CAAW,4BAAX,EAAyCC,IAAI,CAACC,SAAL,CAAe;AACtDC,MAAAA,QAAQ,EAAEb,KAD4C;AAEtDC,MAAAA,QAAQ,EAAEA;AAF4C,KAAf,CAAzC,EAGII,OAHJ,EAIGS,IAJH,CAISC,GAAD,IAAS;AACbP,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCM,GAArC;AACAC,MAAAA,YAAY,CAACC,KAAb,GAAqBF,GAAG,CAACG,IAAJ,CAASD,KAA9B;AACAd,MAAAA,OAAO,CAACgB,IAAR,CAAa,YAAb;AACAjB,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAER,aADC;AAEPwB,QAAAA,OAAO,EAAEL,GAAG,CAACG;AAFN,OAAD,CAAR;AAID,KAZH,EAaGG,KAbH,CAaUC,GAAD,IAAS;AACdd,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCa,GAAjC;AACApB,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEP,WADC;AAEPuB,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,GAAeD,GAAG,CAACC,QAAJ,CAAaL,IAA5B,GAAmC;AAFrC,OAAD,CAAR;AAID,KAnBH;AAoBD,GAnCoB;AAAA,YACHpB,UADG;AAAA;AAAA,CAAd","sourcesContent":["import axios from \"axios\";\nimport axiosInstance from \"../../helpers/AxiosInstance\";\nimport {\n  LOGIN_LOADING,\n  LOGIN_SUCCESS,\n  LOGIN_ERROR,\n} from \"../../helpers/constants\";\nimport { useHistory } from \"react-router-dom\";\n\n\n\nexport const login = ({ email, password }) => (dispatch) => {\n  const history = useHistory();\n\n  dispatch({\n    type: LOGIN_LOADING,\n  });\n  const options = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    }\n  };\n\n  console.log(email, password)\n\n  axios.post(\"http://127.0.0.1:5000/auth\", JSON.stringify({\n    username: email,\n    password: password\n  }), options)\n    .then((res) => {\n      console.log(\"succcesss bitccchh!!!\", res)\n      localStorage.token = res.data.token;\n      history.push(\"/dashboard\");\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      console.log(\"error bitccchh!!!\", err)\n      dispatch({\n        type: LOGIN_ERROR,\n        payload: err.response ? err.response.data : \"COULD NOT CONNECT\",\n      });\n    })\n}\n\n"]},"metadata":{},"sourceType":"module"}