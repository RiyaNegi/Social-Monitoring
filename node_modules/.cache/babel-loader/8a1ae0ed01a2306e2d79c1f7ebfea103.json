{"ast":null,"code":"import { AuthAxios } from \"../../helpers/AuthAxios.js\";\nimport AxiosInstance from \"../../helpers/AxiosInstance.js\";\nimport { OUTREACH_SUCCESS, ERROR, SENTIMENT_SUCCESS, BUZZ_SUCCESS, WORDLCLOUD_SUCCESS, MENTIONS_SUCCESS, GET_IDENTITY } from \"../../helpers/constants\";\nexport const buzz = user => async dispatch => {\n  // dispatch({\n  //     type: LOADING,\n  // });\n  console.log(\"TEsts\");\n  await AxiosInstance.get(\"/buzz\", {\n    params: {\n      user\n    }\n  }).then(res => {\n    dispatch({\n      type: BUZZ_SUCCESS,\n      payload: res\n    });\n    console.log(\"buzz data is here so now next\");\n  }).catch(err => {\n    console.log(\"error!!!\", err);\n    dispatch({\n      type: ERROR,\n      payload: err.response ? err.response.data : \"COULD NOT CONNECT\"\n    });\n  });\n};\nexport const outreach = user => async dispatch => {\n  // dispatch({\n  //     type: LOADING,\n  // });\n  await AxiosInstance.get(\"/outreach\", {\n    params: {\n      user\n    }\n  }).then(res => {\n    dispatch({\n      type: OUTREACH_SUCCESS,\n      payload: res\n    });\n    console.log(\"outreach data is here so now next\");\n  }).catch(err => {\n    console.log(\"error!!!\", err);\n    dispatch({\n      type: ERROR,\n      payload: err.response ? err.response.data : \"COULD NOT CONNECT\"\n    });\n  });\n};\nexport const sentiment = user => async dispatch => {\n  // dispatch({\n  //     type: LOADING,\n  // });\n  await AxiosInstance.get(\"/sentiment\", {\n    params: {\n      user\n    }\n  }).then(res => {\n    dispatch({\n      type: SENTIMENT_SUCCESS,\n      payload: res\n    });\n    console.log(\"sentiment data is here so now next\");\n  }).catch(err => {\n    console.log(\"error!!!\", err);\n    dispatch({\n      type: ERROR,\n      payload: err.response ? err.response.data : \"COULD NOT CONNECT\"\n    });\n  });\n};\nexport const wordCloud = user => async dispatch => {\n  // dispatch({\n  //     type: LOADING,\n  // });\n  await AxiosInstance.get(\"/wordcloud\", {\n    params: {\n      user\n    }\n  }).then(res => {\n    dispatch({\n      type: WORDLCLOUD_SUCCESS,\n      payload: res\n    });\n  }).catch(err => {\n    console.log(\"error!!!\", err);\n    dispatch({\n      type: ERROR,\n      payload: err.response ? err.response.data : \"COULD NOT CONNECT\"\n    });\n  });\n};\nexport const totalMentions = user => async dispatch => {\n  // dispatch({\n  //     type: LOADING,\n  // });\n  await AxiosInstance.get(\"/totalMentions\", {\n    params: {\n      user\n    }\n  }).then(res => {\n    dispatch({\n      type: MENTIONS_SUCCESS,\n      payload: res\n    });\n  }).catch(err => {\n    console.log(\"error!!!\", err);\n    dispatch({\n      type: ERROR,\n      payload: err.response ? err.response.data : \"COULD NOT CONNECT\"\n    });\n  });\n};\nexport const identity = dispatch => {\n  AxiosInstance.get(\"/protected\").then(res => {\n    console.log(\"Identity found bitccchh!!!\", res);\n    localStorage.setItem('user', res.data);\n    dispatch({\n      type: GET_IDENTITY,\n      payload: res\n    });\n  }).catch(err => {\n    console.log(\"error!!!\", err);\n    dispatch({\n      type: ERROR,\n      payload: err.response ? err.response.data : \"COULD NOT CONNECT\"\n    });\n  });\n};","map":{"version":3,"sources":["/home/riya/social-monitoring/src/context/actions/dashboard.js"],"names":["AuthAxios","AxiosInstance","OUTREACH_SUCCESS","ERROR","SENTIMENT_SUCCESS","BUZZ_SUCCESS","WORDLCLOUD_SUCCESS","MENTIONS_SUCCESS","GET_IDENTITY","buzz","user","dispatch","console","log","get","params","then","res","type","payload","catch","err","response","data","outreach","sentiment","wordCloud","totalMentions","identity","localStorage","setItem"],"mappings":"AAAA,SAASA,SAAT,QAA0B,4BAA1B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,SACCC,gBADD,EAECC,KAFD,EAGCC,iBAHD,EAICC,YAJD,EAKCC,kBALD,EAMCC,gBAND,EAOCC,YAPD,QAQO,yBARP;AAWA,OAAO,MAAMC,IAAI,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;AACjD;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,QAAMZ,aAAa,CAACa,GAAd,CAAkB,OAAlB,EAA2B;AAChCC,IAAAA,MAAM,EAAE;AACPL,MAAAA;AADO;AADwB,GAA3B,EAKJM,IALI,CAKEC,GAAD,IAAS;AACdN,IAAAA,QAAQ,CAAC;AACRO,MAAAA,IAAI,EAAEb,YADE;AAERc,MAAAA,OAAO,EAAEF;AAFD,KAAD,CAAR;AAIAL,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACA,GAXI,EAYJO,KAZI,CAYGC,GAAD,IAAS;AACfT,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBQ,GAAxB;AACAV,IAAAA,QAAQ,CAAC;AACRO,MAAAA,IAAI,EAAEf,KADE;AAERgB,MAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,GAAeD,GAAG,CAACC,QAAJ,CAAaC,IAA5B,GAAmC;AAFpC,KAAD,CAAR;AAIA,GAlBI,CAAN;AAmBA,CAxBM;AA0BP,OAAO,MAAMC,QAAQ,GAAId,IAAD,IAAU,MAAOC,QAAP,IAAoB;AACrD;AACA;AACA;AACA,QAAMV,aAAa,CAACa,GAAd,CAAkB,WAAlB,EAA+B;AACpCC,IAAAA,MAAM,EAAE;AACPL,MAAAA;AADO;AAD4B,GAA/B,EAKJM,IALI,CAKEC,GAAD,IAAS;AACdN,IAAAA,QAAQ,CAAC;AACRO,MAAAA,IAAI,EAAEhB,gBADE;AAERiB,MAAAA,OAAO,EAAEF;AAFD,KAAD,CAAR;AAIAL,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACA,GAXI,EAYJO,KAZI,CAYGC,GAAD,IAAS;AACfT,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBQ,GAAxB;AACAV,IAAAA,QAAQ,CAAC;AACRO,MAAAA,IAAI,EAAEf,KADE;AAERgB,MAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,GAAeD,GAAG,CAACC,QAAJ,CAAaC,IAA5B,GAAmC;AAFpC,KAAD,CAAR;AAIA,GAlBI,CAAN;AAmBA,CAvBM;AAyBP,OAAO,MAAME,SAAS,GAAIf,IAAD,IAAU,MAAOC,QAAP,IAAoB;AACtD;AACA;AACA;AAEA,QAAMV,aAAa,CAACa,GAAd,CAAkB,YAAlB,EAAgC;AACrCC,IAAAA,MAAM,EAAE;AACPL,MAAAA;AADO;AAD6B,GAAhC,EAKJM,IALI,CAKEC,GAAD,IAAS;AACdN,IAAAA,QAAQ,CAAC;AACRO,MAAAA,IAAI,EAAEd,iBADE;AAERe,MAAAA,OAAO,EAAEF;AAFD,KAAD,CAAR;AAIAL,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACA,GAXI,EAYJO,KAZI,CAYGC,GAAD,IAAS;AACfT,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBQ,GAAxB;AACAV,IAAAA,QAAQ,CAAC;AACRO,MAAAA,IAAI,EAAEf,KADE;AAERgB,MAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,GAAeD,GAAG,CAACC,QAAJ,CAAaC,IAA5B,GAAmC;AAFpC,KAAD,CAAR;AAIA,GAlBI,CAAN;AAmBA,CAxBM;AA2BP,OAAO,MAAMG,SAAS,GAAIhB,IAAD,IAAU,MAAOC,QAAP,IAAoB;AACtD;AACA;AACA;AACA,QAAMV,aAAa,CAACa,GAAd,CAAkB,YAAlB,EAAgC;AACrCC,IAAAA,MAAM,EAAE;AACPL,MAAAA;AADO;AAD6B,GAAhC,EAKJM,IALI,CAKEC,GAAD,IAAS;AACdN,IAAAA,QAAQ,CAAC;AACRO,MAAAA,IAAI,EAAEZ,kBADE;AAERa,MAAAA,OAAO,EAAEF;AAFD,KAAD,CAAR;AAKA,GAXI,EAYJG,KAZI,CAYGC,GAAD,IAAS;AACfT,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBQ,GAAxB;AACAV,IAAAA,QAAQ,CAAC;AACRO,MAAAA,IAAI,EAAEf,KADE;AAERgB,MAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,GAAeD,GAAG,CAACC,QAAJ,CAAaC,IAA5B,GAAmC;AAFpC,KAAD,CAAR;AAIA,GAlBI,CAAN;AAmBA,CAvBM;AAyBP,OAAO,MAAMI,aAAa,GAAIjB,IAAD,IAAU,MAAOC,QAAP,IAAoB;AAC1D;AACA;AACA;AACA,QAAMV,aAAa,CAACa,GAAd,CAAkB,gBAAlB,EAAoC;AACzCC,IAAAA,MAAM,EAAE;AACPL,MAAAA;AADO;AADiC,GAApC,EAKJM,IALI,CAKEC,GAAD,IAAS;AACdN,IAAAA,QAAQ,CAAC;AACRO,MAAAA,IAAI,EAAEX,gBADE;AAERY,MAAAA,OAAO,EAAEF;AAFD,KAAD,CAAR;AAIA,GAVI,EAWJG,KAXI,CAWGC,GAAD,IAAS;AACfT,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBQ,GAAxB;AACAV,IAAAA,QAAQ,CAAC;AACRO,MAAAA,IAAI,EAAEf,KADE;AAERgB,MAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,GAAeD,GAAG,CAACC,QAAJ,CAAaC,IAA5B,GAAmC;AAFpC,KAAD,CAAR;AAIA,GAjBI,CAAN;AAkBA,CAtBM;AAwBP,OAAO,MAAMK,QAAQ,GAAIjB,QAAD,IAAc;AACrCV,EAAAA,aAAa,CAACa,GAAd,CAAkB,YAAlB,EACEE,IADF,CACQC,GAAD,IAAS;AACdL,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CI,GAA1C;AACAY,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6Bb,GAAG,CAACM,IAAjC;AACAZ,IAAAA,QAAQ,CAAC;AACRO,MAAAA,IAAI,EAAEV,YADE;AAERW,MAAAA,OAAO,EAAEF;AAFD,KAAD,CAAR;AAKA,GATF,EAUEG,KAVF,CAUSC,GAAD,IAAS;AACfT,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBQ,GAAxB;AACAV,IAAAA,QAAQ,CAAC;AACRO,MAAAA,IAAI,EAAEf,KADE;AAERgB,MAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,GAAeD,GAAG,CAACC,QAAJ,CAAaC,IAA5B,GAAmC;AAFpC,KAAD,CAAR;AAIA,GAhBF;AAiBA,CAlBM","sourcesContent":["import { AuthAxios } from \"../../helpers/AuthAxios.js\";\nimport AxiosInstance from \"../../helpers/AxiosInstance.js\"\nimport {\n\tOUTREACH_SUCCESS,\n\tERROR,\n\tSENTIMENT_SUCCESS,\n\tBUZZ_SUCCESS,\n\tWORDLCLOUD_SUCCESS,\n\tMENTIONS_SUCCESS,\n\tGET_IDENTITY\n} from \"../../helpers/constants\";\n\n\nexport const buzz = (user) => async (dispatch) => {\n\t// dispatch({\n\t//     type: LOADING,\n\t// });\n\tconsole.log(\"TEsts\")\n\tawait AxiosInstance.get(\"/buzz\", {\n\t\tparams: {\n\t\t\tuser\n\t\t}\n\t})\n\t\t.then((res) => {\n\t\t\tdispatch({\n\t\t\t\ttype: BUZZ_SUCCESS,\n\t\t\t\tpayload: res,\n\t\t\t});\n\t\t\tconsole.log(\"buzz data is here so now next\")\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(\"error!!!\", err)\n\t\t\tdispatch({\n\t\t\t\ttype: ERROR,\n\t\t\t\tpayload: err.response ? err.response.data : \"COULD NOT CONNECT\",\n\t\t\t});\n\t\t})\n}\n\nexport const outreach = (user) => async (dispatch) => {\n\t// dispatch({\n\t//     type: LOADING,\n\t// });\n\tawait AxiosInstance.get(\"/outreach\", {\n\t\tparams: {\n\t\t\tuser\n\t\t}\n\t})\n\t\t.then((res) => {\n\t\t\tdispatch({\n\t\t\t\ttype: OUTREACH_SUCCESS,\n\t\t\t\tpayload: res,\n\t\t\t});\n\t\t\tconsole.log(\"outreach data is here so now next\")\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(\"error!!!\", err)\n\t\t\tdispatch({\n\t\t\t\ttype: ERROR,\n\t\t\t\tpayload: err.response ? err.response.data : \"COULD NOT CONNECT\",\n\t\t\t});\n\t\t})\n}\n\nexport const sentiment = (user) => async (dispatch) => {\n\t// dispatch({\n\t//     type: LOADING,\n\t// });\n\n\tawait AxiosInstance.get(\"/sentiment\", {\n\t\tparams: {\n\t\t\tuser\n\t\t}\n\t})\n\t\t.then((res) => {\n\t\t\tdispatch({\n\t\t\t\ttype: SENTIMENT_SUCCESS,\n\t\t\t\tpayload: res,\n\t\t\t})\n\t\t\tconsole.log(\"sentiment data is here so now next\")\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(\"error!!!\", err)\n\t\t\tdispatch({\n\t\t\t\ttype: ERROR,\n\t\t\t\tpayload: err.response ? err.response.data : \"COULD NOT CONNECT\",\n\t\t\t});\n\t\t})\n}\n\n\nexport const wordCloud = (user) => async (dispatch) => {\n\t// dispatch({\n\t//     type: LOADING,\n\t// });\n\tawait AxiosInstance.get(\"/wordcloud\", {\n\t\tparams: {\n\t\t\tuser\n\t\t}\n\t})\n\t\t.then((res) => {\n\t\t\tdispatch({\n\t\t\t\ttype: WORDLCLOUD_SUCCESS,\n\t\t\t\tpayload: res,\n\t\t\t});\n\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(\"error!!!\", err)\n\t\t\tdispatch({\n\t\t\t\ttype: ERROR,\n\t\t\t\tpayload: err.response ? err.response.data : \"COULD NOT CONNECT\",\n\t\t\t});\n\t\t})\n}\n\nexport const totalMentions = (user) => async (dispatch) => {\n\t// dispatch({\n\t//     type: LOADING,\n\t// });\n\tawait AxiosInstance.get(\"/totalMentions\", {\n\t\tparams: {\n\t\t\tuser\n\t\t}\n\t})\n\t\t.then((res) => {\n\t\t\tdispatch({\n\t\t\t\ttype: MENTIONS_SUCCESS,\n\t\t\t\tpayload: res,\n\t\t\t});\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(\"error!!!\", err)\n\t\t\tdispatch({\n\t\t\t\ttype: ERROR,\n\t\t\t\tpayload: err.response ? err.response.data : \"COULD NOT CONNECT\",\n\t\t\t});\n\t\t})\n}\n\nexport const identity = (dispatch) => {\n\tAxiosInstance.get(\"/protected\")\n\t\t.then((res) => {\n\t\t\tconsole.log(\"Identity found bitccchh!!!\", res)\n\t\t\tlocalStorage.setItem('user', res.data)\n\t\t\tdispatch({\n\t\t\t\ttype: GET_IDENTITY,\n\t\t\t\tpayload: res,\n\t\t\t});\n\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(\"error!!!\", err)\n\t\t\tdispatch({\n\t\t\t\ttype: ERROR,\n\t\t\t\tpayload: err.response ? err.response.data : \"COULD NOT CONNECT\",\n\t\t\t});\n\t\t})\n}"]},"metadata":{},"sourceType":"module"}