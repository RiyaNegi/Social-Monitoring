{"ast":null,"code":"var _jsxFileName = \"/home/riya/social-monitoring/src/components/Dashboard/Predictor/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext } from 'react';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport Tooltipp from 'react-bootstrap/Tooltip';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { outreach } from \"../../../context/actions/dashboard\";\nimport { GlobalContext } from \"../../../context/Provider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: '1st Jan',\n  low: 1,\n  high: 5,\n  amt: 2\n}, {\n  name: '2nd Jan',\n  low: 2,\n  high: 1,\n  amt: 2\n}, {\n  name: '3rd Jan',\n  low: 5,\n  high: 7,\n  amt: 2\n}, {\n  name: '4th Jan',\n  low: 10,\n  high: 3,\n  amt: 2\n}, {\n  name: '5th Jan',\n  low: 2,\n  high: 10,\n  amt: 2\n}, {\n  name: '6th Jan',\n  low: 1,\n  high: 4,\n  amt: 2\n}, {\n  name: '7th Jan',\n  low: 1,\n  high: 4,\n  amt: 2\n}];\n\nconst Predictor = () => {\n  _s();\n\n  const {\n    dashboardDispatch,\n    dashboardState\n  } = useContext(GlobalContext);\n  useEffect(() => {\n    outreach(dashboardDispatch);\n  }, []);\n  console.log(\"outreach data->\", dashboardState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 700,\n      height: 260\n    },\n    children: [/*#__PURE__*/_jsxDEV(OverlayTrigger, {\n      placement: 'right',\n      overlay: /*#__PURE__*/_jsxDEV(Tooltipp, {\n        style: {\n          opacity: 0.7\n        },\n        children: \"See how much outreach your brand is getting across various social media platforms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-title text-left\",\n        children: \"Outreach Predictor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(AreaChart, {\n        width: 200,\n        height: 150,\n        data: data,\n        margin: {\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Area, {\n          type: \"monotone\",\n          dataKey: \"low\",\n          stroke: \"#5E77FF\",\n          fill: \"#5E77FF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Area, {\n          type: \"monotone\",\n          dataKey: \"high\",\n          stroke: \"#C989EB\",\n          fill: \"#C989EB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Predictor, \"bNOCNxzyX6C8+AnDoTzDNYGfB+s=\");\n\n_c = Predictor;\nexport default Predictor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Predictor\");","map":{"version":3,"sources":["/home/riya/social-monitoring/src/components/Dashboard/Predictor/index.js"],"names":["React","useEffect","useContext","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Tooltipp","OverlayTrigger","outreach","GlobalContext","data","name","low","high","amt","Predictor","dashboardDispatch","dashboardState","console","log","width","height","opacity","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext } from 'react';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport Tooltipp from 'react-bootstrap/Tooltip'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport { outreach } from \"../../../context/actions/dashboard\"\nimport { GlobalContext } from \"../../../context/Provider\"\n\nconst data = [\n    {\n        name: '1st Jan',\n        low: 1,\n        high: 5,\n        amt: 2,\n    },\n    {\n        name: '2nd Jan',\n        low: 2,\n        high: 1,\n        amt: 2,\n    },\n    {\n        name: '3rd Jan',\n        low: 5,\n        high: 7,\n        amt: 2,\n    },\n    {\n        name: '4th Jan',\n        low: 10,\n        high: 3,\n        amt: 2,\n    },\n    {\n        name: '5th Jan',\n        low: 2,\n        high: 10,\n        amt: 2,\n    },\n    {\n        name: '6th Jan',\n        low: 1,\n        high: 4,\n        amt: 2,\n    },\n    {\n        name: '7th Jan',\n        low: 1,\n        high: 4,\n        amt: 2,\n    }\n];\n\nconst Predictor = () => {\n    const { dashboardDispatch, dashboardState } = useContext(GlobalContext);\n\n    useEffect(() => {\n        outreach(dashboardDispatch)\n    }, [])\n\n    console.log(\"outreach data->\", dashboardState)\n\n    return <div style={{ width: 700, height: 260 }}>\n        <OverlayTrigger\n            placement={'right'}\n            overlay={\n                <Tooltipp style={{ opacity: 0.7 }} >\n                    See how much outreach your brand is getting across various social media platforms\n        </Tooltipp>\n            }\n        >\n            <div className=\"card-title text-left\">Outreach Predictor</div>\n        </OverlayTrigger>\n        < ResponsiveContainer width=\"100%\" height=\"100%\">\n            <AreaChart\n                width={200}\n                height={150}\n                data={data}\n                margin={{\n                    top: 10,\n                    right: 30,\n                    left: 0,\n                    bottom: 0,\n                }}\n            >\n                {/* <defs>\n                    <linearGradient id=\"colorlow\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"#E25960\" stopOpacity={0.8} />\n                        <stop offset=\"95%\" stopColor=\"#E25960\" stopOpacity={0} />\n                    </linearGradient>\n                    <linearGradient id=\"colorhigh\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"#323232\" stopOpacity={0.8} />\n                        <stop offset=\"95%\" stopColor=\"#323232\" stopOpacity={0} />\n                    </linearGradient>\n                </defs> */}\n                <XAxis dataKey=\"name\" />\n                {/* <CartesianGrid strokeDasharray=\"5 5\" /> */}\n                <YAxis />\n                <Tooltip />\n                <Area type=\"monotone\" dataKey=\"low\" stroke=\"#5E77FF\" fill=\"#5E77FF\" />\n                <Area type=\"monotone\" dataKey=\"high\" stroke=\"#C989EB\" fill=\"#C989EB\" />\n            </AreaChart>\n        </ResponsiveContainer>\n    </div>\n}\n\nexport default Predictor\n\n"]},"metadata":{},"sourceType":"module"}