{"ast":null,"code":"import axios from \"axios\";\nimport axiosInstance from \"../../helpers/AxiosInstance\";\nimport { LOGIN_LOADING, LOGIN_SUCCESS, LOGIN_ERROR, LOGOUT_SUCCESS, LOGOUT_ERROR } from \"../../helpers/constants\";\nimport History from \"../../utils/history\";\nexport const login = ({\n  email,\n  password\n}) => dispatch => {\n  dispatch({\n    type: LOGIN_LOADING\n  });\n  const options = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    }\n  };\n  console.log(email, password);\n  axios.post(\"http://127.0.0.1:5000/auth\", JSON.stringify({\n    username: email,\n    password: password\n  }), options).then(res => {\n    console.log(\"succcesss bitccchh!!!\", res);\n    localStorage.setItem('token', res.data.token);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    console.log(\"there??\", localStorage.token); // History.push('/dashboard')\n  }).catch(err => {\n    console.log(\"error bitccchh!!!\", err);\n    dispatch({\n      type: LOGIN_ERROR,\n      payload: err.response ? err.response.data : \"COULD NOT CONNECT\"\n    });\n  });\n};\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGIN_LOADING\n  });\n  const options = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    }\n  };\n  console.log(email, password);\n  window.localStorage.removeItem(\"token\"); //remove one item\n  // axios.post(\"http://127.0.0.1:5000/auth\", JSON.stringify({\n  //   username: email,\n  //   password: password\n  // }), options)\n  //   .then((res) => {\n  //     console.log(\"succcesss bitccchh!!!\", res)\n  //     localStorage.setItem('token', res.data.token)\n  //     dispatch({\n  //       type: LOGIN_SUCCESS,\n  //       payload: res.data,\n  //     });\n  //     console.log(\"there??\", localStorage.token)\n  //     // History.push('/dashboard')\n  //   })\n  //   .catch((err) => {\n  //     console.log(\"error bitccchh!!!\", err)\n  //     dispatch({\n  //       type: LOGIN_ERROR,\n  //       payload: err.response ? err.response.data : \"COULD NOT CONNECT\",\n  //     });\n  //   })\n};","map":{"version":3,"sources":["/home/riya/social-monitoring/src/context/actions/auth.js"],"names":["axios","axiosInstance","LOGIN_LOADING","LOGIN_SUCCESS","LOGIN_ERROR","LOGOUT_SUCCESS","LOGOUT_ERROR","History","login","email","password","dispatch","type","options","headers","Accept","console","log","post","JSON","stringify","username","then","res","localStorage","setItem","data","token","payload","catch","err","response","logout","window","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,cAJF,EAKEC,YALF,QAMO,yBANP;AAOA,OAAOC,OAAP,MAAoB,qBAApB;AAIA,OAAO,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA0BC,QAAD,IAAc;AAC1DA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEV;AADC,GAAD,CAAR;AAGA,QAAMW,OAAO,GAAG;AACdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,MAAM,EAAE;AAFD;AADK,GAAhB;AAOAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ,EAAmBC,QAAnB;AAEAV,EAAAA,KAAK,CAACkB,IAAN,CAAW,4BAAX,EAAyCC,IAAI,CAACC,SAAL,CAAe;AACtDC,IAAAA,QAAQ,EAAEZ,KAD4C;AAEtDC,IAAAA,QAAQ,EAAEA;AAF4C,GAAf,CAAzC,EAGIG,OAHJ,EAIGS,IAJH,CAISC,GAAD,IAAS;AACbP,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCM,GAArC;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,GAAG,CAACG,IAAJ,CAASC,KAAvC;AACAhB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET,aADC;AAEPyB,MAAAA,OAAO,EAAEL,GAAG,CAACG;AAFN,KAAD,CAAR;AAIAV,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBO,YAAY,CAACG,KAApC,EAPa,CAQb;AACD,GAbH,EAcGE,KAdH,CAcUC,GAAD,IAAS;AACdd,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCa,GAAjC;AACAnB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAER,WADC;AAEPwB,MAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,GAAeD,GAAG,CAACC,QAAJ,CAAaL,IAA5B,GAAmC;AAFrC,KAAD,CAAR;AAID,GApBH;AAqBD,CAlCM;AAoCP,OAAO,MAAMM,MAAM,GAAG,MAAOrB,QAAD,IAAc;AACxCA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEV;AADC,GAAD,CAAR;AAGA,QAAMW,OAAO,GAAG;AACdC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,MAAM,EAAE;AAFD;AADK,GAAhB;AAOAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ,EAAmBC,QAAnB;AACAuB,EAAAA,MAAM,CAACT,YAAP,CAAoBU,UAApB,CAA+B,OAA/B,EAZwC,CAYC;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAnCM","sourcesContent":["import axios from \"axios\";\nimport axiosInstance from \"../../helpers/AxiosInstance\";\nimport {\n  LOGIN_LOADING,\n  LOGIN_SUCCESS,\n  LOGIN_ERROR,\n  LOGOUT_SUCCESS,\n  LOGOUT_ERROR\n} from \"../../helpers/constants\";\nimport History from \"../../utils/history\";\n\n\n\nexport const login = ({ email, password }) => (dispatch) => {\n  dispatch({\n    type: LOGIN_LOADING,\n  });\n  const options = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    }\n  };\n\n  console.log(email, password)\n\n  axios.post(\"http://127.0.0.1:5000/auth\", JSON.stringify({\n    username: email,\n    password: password\n  }), options)\n    .then((res) => {\n      console.log(\"succcesss bitccchh!!!\", res)\n      localStorage.setItem('token', res.data.token)\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n      console.log(\"there??\", localStorage.token)\n      // History.push('/dashboard')\n    })\n    .catch((err) => {\n      console.log(\"error bitccchh!!!\", err)\n      dispatch({\n        type: LOGIN_ERROR,\n        payload: err.response ? err.response.data : \"COULD NOT CONNECT\",\n      });\n    })\n}\n\nexport const logout = () => (dispatch) => {\n  dispatch({\n    type: LOGIN_LOADING,\n  });\n  const options = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    }\n  };\n\n  console.log(email, password)\n  window.localStorage.removeItem(\"token\"); //remove one item\n\n  // axios.post(\"http://127.0.0.1:5000/auth\", JSON.stringify({\n  //   username: email,\n  //   password: password\n  // }), options)\n  //   .then((res) => {\n  //     console.log(\"succcesss bitccchh!!!\", res)\n  //     localStorage.setItem('token', res.data.token)\n  //     dispatch({\n  //       type: LOGIN_SUCCESS,\n  //       payload: res.data,\n  //     });\n  //     console.log(\"there??\", localStorage.token)\n  //     // History.push('/dashboard')\n  //   })\n  //   .catch((err) => {\n  //     console.log(\"error bitccchh!!!\", err)\n  //     dispatch({\n  //       type: LOGIN_ERROR,\n  //       payload: err.response ? err.response.data : \"COULD NOT CONNECT\",\n  //     });\n  //   })\n}\n\n\n"]},"metadata":{},"sourceType":"module"}