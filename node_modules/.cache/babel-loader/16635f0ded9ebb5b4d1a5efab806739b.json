{"ast":null,"code":"var _jsxFileName = \"/home/riya/social-monitoring/src/context/Provider.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer, useState, useEffect } from \"react\";\nimport auth from \"./reducers/auth\";\nimport { authInitial } from \"./InitialState\"; // import io from \"socket.io-client\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst io = require('socket.io').listen(process.env.port || 5000); // let endPoint = \"http://localhost:5000\";\n// let socket = io.connect(`${endPoint}`);\n\n\nexport const GlobalContext = /*#__PURE__*/createContext({});\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n\n  const [authState, authDispatch] = useReducer(auth, authInitial);\n  const [time, setTime] = useState(\"\");\n\n  const getTime = () => {\n    console.log(\"here\"); // socket.emit(\"getTime\")\n\n    socket.on(\"getTime\", timenew => {\n      setTime({\n        time: timenew\n      });\n      console.log(\"get time was called ->\", timenew);\n    });\n  }; //   setInterval(() => {\n  //         console.log('Interval triggered');\n  //         getTime()\n  //     }, 3000);\n\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      authState,\n      authDispatch,\n      time: time\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GlobalProvider, \"kShwBd3pxi3KfX9jSddi3pbkXTc=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["/home/riya/social-monitoring/src/context/Provider.js"],"names":["React","createContext","useReducer","useState","useEffect","auth","authInitial","io","require","listen","process","env","port","GlobalContext","GlobalProvider","children","authState","authDispatch","time","setTime","getTime","console","log","socket","on","timenew"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,EAAqDC,SAArD,QAAsE,OAAtE;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,WAAT,QAA4B,gBAA5B,C,CACA;;;;AACA,MAAMC,EAAE,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBC,MAArB,CAA4BC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAhD,CAAX,C,CAEA;AACA;;;AAEA,OAAO,MAAMC,aAAa,gBAAGZ,aAAa,CAAC,EAAD,CAAnC;AAEP,OAAO,MAAMa,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,UAAU,CAACG,IAAD,EAAOC,WAAP,CAA5C;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMiB,OAAO,GAAG,MAAM;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EADkB,CAElB;;AACAC,IAAAA,MAAM,CAACC,EAAP,CAAU,SAAV,EAAqBC,OAAO,IAAI;AAC5BN,MAAAA,OAAO,CAAC;AAAED,QAAAA,IAAI,EAAEO;AAAR,OAAD,CAAP;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCG,OAAtC;AACH,KAHD;AAIH,GAPD,CAJ4C,CAa5C;AACA;AACA;AACA;;;AAGA,sBACI,QAAC,aAAD,CAAe,QAAf;AACI,IAAA,KAAK,EAAE;AACHT,MAAAA,SADG;AAEHC,MAAAA,YAFG;AAGHC,MAAAA,IAAI,EAAEA;AAHH,KADX;AAAA,cAOKH;AAPL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA9BM;;GAAMD,c;;KAAAA,c","sourcesContent":["import React, { createContext, useReducer, useState, useEffect } from \"react\";\nimport auth from \"./reducers/auth\";\nimport { authInitial } from \"./InitialState\"\n// import io from \"socket.io-client\";\nconst io = require('socket.io').listen(process.env.port || 5000);\n\n// let endPoint = \"http://localhost:5000\";\n// let socket = io.connect(`${endPoint}`);\n\nexport const GlobalContext = createContext({});\n\nexport const GlobalProvider = ({ children }) => {\n    const [authState, authDispatch] = useReducer(auth, authInitial);\n    const [time, setTime] = useState(\"\")\n\n    const getTime = () => {\n        console.log(\"here\")\n        // socket.emit(\"getTime\")\n        socket.on(\"getTime\", timenew => {\n            setTime({ time: timenew });\n            console.log(\"get time was called ->\", timenew)\n        });\n    };\n\n    //   setInterval(() => {\n    //         console.log('Interval triggered');\n    //         getTime()\n    //     }, 3000);\n\n\n    return (\n        <GlobalContext.Provider\n            value={{\n                authState,\n                authDispatch,\n                time: time\n            }}\n        >\n            {children}\n        </GlobalContext.Provider>\n    );\n};"]},"metadata":{},"sourceType":"module"}