{"ast":null,"code":"var _jsxFileName = \"/home/riya/social-monitoring/src/context/Provider.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer, useState, useEffect } from \"react\";\nimport auth from \"./reducers/auth\";\nimport dashboard from \"./reducers/dashboard\";\nimport { authInitial, dashboardInitial } from \"./InitialState\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet endPoint = \"http://localhost:5000\";\nlet socket = io.connect(`${endPoint}`);\nexport const GlobalContext = /*#__PURE__*/createContext({});\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n\n  const [authState, authDispatch] = useReducer(auth, authInitial);\n  const [dasahboardState, dashboardDispatch] = useReducer(dashboard, dashboardInitial);\n  const [time, setTime] = useState(1);\n\n  const getTime = () => {\n    socket.emit(\"getTime\");\n    socket.on(\"getTime\", timenew => {\n      setTime(timenew); // console.log(\"get time was called ->\", timenew)\n    });\n  };\n\n  useEffect(() => {\n    getTime();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      authState,\n      authDispatch,\n      time: time\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GlobalProvider, \"Fc4//9HfWT4i/lSJSJ/U/xblb3g=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["/home/riya/social-monitoring/src/context/Provider.js"],"names":["React","createContext","useReducer","useState","useEffect","auth","dashboard","authInitial","dashboardInitial","io","endPoint","socket","connect","GlobalContext","GlobalProvider","children","authState","authDispatch","dasahboardState","dashboardDispatch","time","setTime","getTime","emit","on","timenew"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,EAAqDC,SAArD,QAAsE,OAAtE;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,gBAA9C;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,IAAIC,QAAQ,GAAG,uBAAf;AACA,IAAIC,MAAM,GAAGF,EAAE,CAACG,OAAH,CAAY,GAAEF,QAAS,EAAvB,CAAb;AAEA,OAAO,MAAMG,aAAa,gBAAGZ,aAAa,CAAC,EAAD,CAAnC;AAEP,OAAO,MAAMa,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,UAAU,CAACG,IAAD,EAAOE,WAAP,CAA5C;AACA,QAAM,CAACW,eAAD,EAAkBC,iBAAlB,IAAuCjB,UAAU,CAACI,SAAD,EAAYE,gBAAZ,CAAvD;AAEA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,CAAD,CAAhC;;AAEA,QAAMmB,OAAO,GAAG,MAAM;AAClBX,IAAAA,MAAM,CAACY,IAAP,CAAY,SAAZ;AACAZ,IAAAA,MAAM,CAACa,EAAP,CAAU,SAAV,EAAqBC,OAAO,IAAI;AAC5BJ,MAAAA,OAAO,CAACI,OAAD,CAAP,CAD4B,CAE5B;AACH,KAHD;AAIH,GAND;;AAQArB,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;AAMA,sBACI,QAAC,aAAD,CAAe,QAAf;AACI,IAAA,KAAK,EAAE;AACHN,MAAAA,SADG;AAEHC,MAAAA,YAFG;AAGHG,MAAAA,IAAI,EAAEA;AAHH,KADX;AAAA,cAOKL;AAPL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA/BM;;GAAMD,c;;KAAAA,c","sourcesContent":["import React, { createContext, useReducer, useState, useEffect } from \"react\";\nimport auth from \"./reducers/auth\";\nimport dashboard from \"./reducers/dashboard\";\nimport { authInitial, dashboardInitial } from \"./InitialState\"\nimport io from \"socket.io-client\";\n\nlet endPoint = \"http://localhost:5000\";\nlet socket = io.connect(`${endPoint}`);\n\nexport const GlobalContext = createContext({});\n\nexport const GlobalProvider = ({ children }) => {\n    const [authState, authDispatch] = useReducer(auth, authInitial);\n    const [dasahboardState, dashboardDispatch] = useReducer(dashboard, dashboardInitial);\n\n    const [time, setTime] = useState(1)\n\n    const getTime = () => {\n        socket.emit(\"getTime\")\n        socket.on(\"getTime\", timenew => {\n            setTime(timenew);\n            // console.log(\"get time was called ->\", timenew)\n        });\n    };\n\n    useEffect(() => {\n        getTime();\n    }, []);\n\n\n\n    return (\n        <GlobalContext.Provider\n            value={{\n                authState,\n                authDispatch,\n                time: time\n            }}\n        >\n            {children}\n        </GlobalContext.Provider>\n    );\n};"]},"metadata":{},"sourceType":"module"}