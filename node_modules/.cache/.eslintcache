[{"/home/riya/latest/src/index.js":"1","/home/riya/latest/src/App.js":"2","/home/riya/social-monitoring/src/index.js":"3","/home/riya/social-monitoring/src/App.js":"4","/home/riya/social-monitoring/src/routes/index.js":"5","/home/riya/social-monitoring/src/components/NavSlide.js":"6","/home/riya/social-monitoring/src/components/Home.js":"7","/home/riya/social-monitoring/src/components/Auth/Login.js":"8","/home/riya/social-monitoring/src/components/Dashboard/index.js":"9","/home/riya/social-monitoring/src/components/Dashboard/Sentiment/Sentiment.js":"10","/home/riya/social-monitoring/src/components/Dashboard/Mention/index.js":"11","/home/riya/social-monitoring/src/components/Dashboard/Sentiment/index.js":"12","/home/riya/social-monitoring/src/components/Dashboard/WordCloud/index.js":"13","/home/riya/social-monitoring/src/components/Dashboard/Sentiment/Line.js":"14","/home/riya/social-monitoring/src/Socket.js":"15","/home/riya/social-monitoring/src/context/Provider.js":"16","/home/riya/social-monitoring/src/context/actions/auth.js":"17","/home/riya/social-monitoring/src/context/InitialState.js":"18","/home/riya/social-monitoring/src/context/reducers/auth.js":"19","/home/riya/social-monitoring/src/helpers/constants.js":"20","/home/riya/social-monitoring/src/helpers/AxiosInstance.js":"21","/home/riya/social-monitoring/src/components/Dashboard/Predictor/index.js":"22","/home/riya/social-monitoring/src/components/Dashboard/Buzz/index.js":"23","/home/riya/social-monitoring/src/components/Dashboard/Buzz/Data.js":"24","/home/riya/social-monitoring/src/components/Dashboard/Buzz/BuzzBody.js":"25","/home/riya/social-monitoring/src/components/Auth/Signup.js":"26"},{"size":500,"mtime":1614411421843,"results":"27","hashOfConfig":"28"},{"size":528,"mtime":1614411421843,"results":"29","hashOfConfig":"28"},{"size":454,"mtime":1618815023039,"results":"30","hashOfConfig":"31"},{"size":761,"mtime":1618838944540,"results":"32","hashOfConfig":"31"},{"size":893,"mtime":1618840150779,"results":"33","hashOfConfig":"31"},{"size":673,"mtime":1618843361815,"results":"34","hashOfConfig":"31"},{"size":111,"mtime":1614429397637,"results":"35","hashOfConfig":"31"},{"size":2930,"mtime":1618840129783,"results":"36","hashOfConfig":"31"},{"size":1232,"mtime":1617290026001,"results":"37","hashOfConfig":"31"},{"size":1457,"mtime":1617649472664,"results":"38","hashOfConfig":"31"},{"size":3107,"mtime":1617649836436,"results":"39","hashOfConfig":"31"},{"size":974,"mtime":1617648361770,"results":"40","hashOfConfig":"31"},{"size":4311,"mtime":1617649631712,"results":"41","hashOfConfig":"31"},{"size":1665,"mtime":1617649538264,"results":"42","hashOfConfig":"31"},{"size":1288,"mtime":1615294530456,"results":"43","hashOfConfig":"31"},{"size":522,"mtime":1616513772561,"results":"44","hashOfConfig":"31"},{"size":775,"mtime":1616648071780,"results":"45","hashOfConfig":"31"},{"size":84,"mtime":1616405617101,"results":"46","hashOfConfig":"31"},{"size":860,"mtime":1616512995222,"results":"47","hashOfConfig":"31"},{"size":343,"mtime":1616513073570,"results":"48","hashOfConfig":"31"},{"size":388,"mtime":1616514351045,"results":"49","hashOfConfig":"31"},{"size":3387,"mtime":1617649759548,"results":"50","hashOfConfig":"31"},{"size":2865,"mtime":1617648050346,"results":"51","hashOfConfig":"31"},{"size":2072,"mtime":1617645849464,"results":"52","hashOfConfig":"31"},{"size":1029,"mtime":1617646506940,"results":"53","hashOfConfig":"31"},{"size":5199,"mtime":1618900641284,"results":"54","hashOfConfig":"31"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vght9s",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},"j90v2c",{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/riya/latest/src/index.js",[],"/home/riya/latest/src/App.js",[],"/home/riya/social-monitoring/src/index.js",["117"],"import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport Routes from \"./routes\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bulma/css/bulma.min.css';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route>\n      <Switch>\n        <Routes />\n      </Switch>\n    </Route>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n",["118","119"],"/home/riya/social-monitoring/src/App.js",["120"],"/home/riya/social-monitoring/src/routes/index.js",[],"/home/riya/social-monitoring/src/components/NavSlide.js",["121"],"/home/riya/social-monitoring/src/components/Home.js",[],"/home/riya/social-monitoring/src/components/Auth/Login.js",["122","123","124"],"/home/riya/social-monitoring/src/components/Dashboard/index.js",[],"/home/riya/social-monitoring/src/components/Dashboard/Sentiment/Sentiment.js",["125"],"import React from 'react'\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\n\nconst data = [\n    { name: 'Neutral', value: 600 },\n    { name: 'Positive', value: 300 },\n    { name: 'Negative', value: 100 },\n];\n\nconst COLORS = ['#8cafeb', '#627aa4', '#eb8c9c'];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n    return (\n        <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n            {`${(percent * 100).toFixed(0)}%`}\n        </text>\n    );\n};\n\nconst Sentiment = () => {\n    return < ResponsiveContainer width=\"100%\" height=\"100%\">\n        <PieChart width={100} height={100}>\n            <Pie\n                data={data}\n                cx=\"50%\"\n                cy=\"50%\"\n                labelLine={false}\n                label={renderCustomizedLabel}\n                outerRadius={90}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n            >\n                {data.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                ))}\n            </Pie>\n        </PieChart>\n    </ResponsiveContainer>\n}\n\nexport default Sentiment","/home/riya/social-monitoring/src/components/Dashboard/Mention/index.js",["126"],"import React from 'react'\nimport \"./Mention.css\"\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport Tooltipp from 'react-bootstrap/Tooltip'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nconst data = [\n    {\n        name: '1st Jan 2021',\n        uv: 4000,\n        pv: 2400,\n        amt: 2400,\n    },\n    {\n        name: '10th Jan 2021',\n        uv: 2000,\n        pv: 1398,\n        amt: 2210,\n    },\n    {\n        name: '20th Jan 2021',\n        uv: 900,\n        pv: 9800,\n        amt: 2290,\n    },\n    {\n        name: '30th Jan 2021',\n        uv: 1280,\n        pv: 3908,\n        amt: 2000,\n    },\n    {\n        name: '10th Feb 2021',\n        uv: 1890,\n        pv: 4800,\n        amt: 2181,\n    },\n    {\n        name: '20th Feb 2021',\n        uv: 1000,\n        pv: 3800,\n        amt: 2500,\n    },\n    {\n        name: '30th Feb 2021',\n        uv: 3490,\n        pv: 4300,\n        amt: 2100,\n    },\n    {\n        name: '10th Mar 2021',\n        uv: 1000,\n        pv: 4300,\n        amt: 2100,\n    },\n    {\n        name: '20th Mar 2021',\n        uv: 2490,\n        pv: 4300,\n        amt: 2100,\n    },\n    {\n        name: '30th Mar 2021',\n        uv: 1400,\n        pv: 4300,\n        amt: 2100,\n    },\n    {\n        name: '10th Apr 2021',\n        uv: 3400,\n        pv: 1398,\n        amt: 2210,\n    },\n    {\n        name: '20th Apr 2021',\n        uv: 2500,\n        pv: 9800,\n        amt: 2290,\n    },\n    {\n        name: '30th Apr 2021',\n        uv: 1280,\n        pv: 3908,\n        amt: 2000,\n    },\n];\n\n\nconst Index = () => {\n    return <div className=\"card-width d-flex flex-column px-3\" style={{ width: 500, height: 250 }}>\n        <OverlayTrigger\n            placement={'right'}\n            overlay={\n                <Tooltipp style={{ opacity: 0.7 }} >\n                    See the total number of mentions of your brand across various social media platforms over time.\n        </Tooltipp>\n            }\n        >\n            <div className=\"card-title text-left\">Total Mentions </div>\n        </OverlayTrigger>\n        < ResponsiveContainer width=\"100%\" height=\"100%\">\n            <AreaChart\n                width={200}\n                height={150}\n                data={data}\n                margin={{\n                    top: 10,\n                    right: 30,\n                    left: 0,\n                    bottom: 0,\n                }}\n            >\n                <defs>\n                    <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"#8cafeb\" stopOpacity={0.8} />\n                        <stop offset=\"95%\" stopColor=\"#8cafeb\" stopOpacity={0} />\n                    </linearGradient>\n                </defs>\n                {/* <CartesianGrid strokeDasharray=\"5 5\" /> */}\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8cafeb\" fillOpacity={1} fill=\"url(#colorUv)\" />\n            </AreaChart>\n        </ResponsiveContainer>\n    </div >\n\n}\n\nexport default Index","/home/riya/social-monitoring/src/components/Dashboard/Sentiment/index.js",[],"/home/riya/social-monitoring/src/components/Dashboard/WordCloud/index.js",[],"/home/riya/social-monitoring/src/components/Dashboard/Sentiment/Line.js",["127"],"import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst data = [\n    {\n        name: '1st Jan 2021',\n        postive: 4000,\n        negative: 2400,\n        amt: 2400,\n    },\n    {\n        name: '10th Jan 2021',\n        postive: 3000,\n        negative: 1398,\n        amt: 2210,\n    },\n    {\n        name: '20th Jan 2021',\n        postive: 2000,\n        negative: 9800,\n        amt: 2290,\n    },\n    {\n        name: '30th Jan 2021',\n        postive: 2780,\n        negative: 3908,\n        amt: 2000,\n    },\n    {\n        name: '10th Feb 2021',\n        postive: 1890,\n        negative: 4800,\n        amt: 2181,\n    },\n    {\n        name: '20th Feb 2021',\n        postive: 2390,\n        negative: 3800,\n        amt: 2500,\n    },\n    {\n        name: '30th Feb 2021',\n        postive: 3490,\n        negative: 4300,\n        amt: 2100,\n    },\n];\n\nconst Linegraph = () => {\n    return <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <LineChart\n            width={300}\n            height={300}\n            data={data}\n            margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5,\n            }}\n        >\n            {/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"negative\" stroke=\"#eb8c9c\" activeDot={{ r: 8 }} />\n            <Line type=\"monotone\" dataKey=\"postive\" stroke=\"#8cafeb\" />\n        </LineChart>\n    </ResponsiveContainer>\n}\n\nexport default Linegraph\n\n","/home/riya/social-monitoring/src/Socket.js",["128"],"import React, {useEffect, useState} from \"react\"\nimport io from \"socket.io-client\";\n\nlet endPoint = \"http://localhost:5000\";\nlet socket = io.connect(`${endPoint}`);\n\n\nconst Sockett = () => {\n    const [messages, setMessages] = useState([\"Hello And Welcome\"]);\n    const [message, setMessage] = useState(\"\");\n  \n    useEffect(() => {\n      getMessages();\n    }, [messages.length]);\n  \n    const getMessages = () => {\n      socket.on(\"message\", msg => {\n        //   let allMessages = messages;\n        //   allMessages.push(msg);\n        //   setMessages(allMessages);\n        setMessages([...messages, msg]);\n      });\n    };\n  \n    // On Change\n    const onChange = e => {\n      setMessage(e.target.value);\n    };\n  \n    // On Click\n    const onClick = () => {\n      if (message !== \"\") {\n        socket.emit(\"message\", message);\n        setMessage(\"\");\n      } else {\n        alert(\"Please Add A Message\");\n      }\n    };\n  \n    return (\n      <div>\n        {messages.length > 0 &&\n          messages.map(msg => (\n            <div>\n              <p>{msg}</p>\n            </div>\n          ))}\n        <input value={message} name=\"message\" onChange={e => onChange(e)} />\n        <button onClick={() => onClick()}>Send Message</button>\n      </div>\n    );\n  };\n  \n  export default Sockett;","/home/riya/social-monitoring/src/context/Provider.js",[],"/home/riya/social-monitoring/src/context/actions/auth.js",["129","130"],"import axios from \"axios\";\nimport axiosInstance from \"../../helpers/AxiosInstance\";\nimport {\n  LOGIN_LOADING,\n  LOGIN_SUCCESS,\n  LOGIN_ERROR,\n} from \"../../helpers/constants\";\nexport const login = ({ email, password }) => (dispatch) => {\n  dispatch({\n    type: LOGIN_LOADING,\n  });\n\n  const options = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    }\n  };\n\n  axios.post(\"http://localhost:5000\", { email, password })\n    .then((res) => {\n      localStorage.token = res.data.token;\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: LOGIN_ERROR,\n        payload: err.response ? err.response.data : \"COULD NOT CONNECT\",\n      });\n    })\n}","/home/riya/social-monitoring/src/context/InitialState.js",[],"/home/riya/social-monitoring/src/context/reducers/auth.js",[],"/home/riya/social-monitoring/src/helpers/constants.js",[],"/home/riya/social-monitoring/src/helpers/AxiosInstance.js",[],"/home/riya/social-monitoring/src/components/Dashboard/Predictor/index.js",["131"],"import React from 'react';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport Tooltipp from 'react-bootstrap/Tooltip'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nconst data = [\n    {\n        name: '1st Jan 2021',\n        uv: 4000,\n        pv: 2400,\n        amt: 2400,\n    },\n    {\n        name: '10th Jan 2021',\n        uv: 2000,\n        pv: 1398,\n        amt: 2210,\n    },\n    {\n        name: '20th Jan 2021',\n        uv: 900,\n        pv: 9800,\n        amt: 2290,\n    },\n    {\n        name: '30th Jan 2021',\n        uv: 1280,\n        pv: 3908,\n        amt: 2000,\n    },\n    {\n        name: '10th Feb 2021',\n        uv: 1890,\n        pv: 4800,\n        amt: 2181,\n    },\n    {\n        name: '20th Feb 2021',\n        uv: 1000,\n        pv: 3800,\n        amt: 2500,\n    },\n    {\n        name: '30th Feb 2021',\n        uv: 3490,\n        pv: 4300,\n        amt: 2100,\n    },\n    {\n        name: '10th Mar 2021',\n        uv: 1000,\n        pv: 4300,\n        amt: 2100,\n    },\n    {\n        name: '20th Mar 2021',\n        uv: 2490,\n        pv: 4300,\n        amt: 2100,\n    },\n    {\n        name: '30th Mar 2021',\n        uv: 1400,\n        pv: 4300,\n        amt: 2100,\n    },\n    {\n        name: '10th Apr 2021',\n        uv: 3400,\n        pv: 1398,\n        amt: 2210,\n    },\n    {\n        name: '20th Apr 2021',\n        uv: 2500,\n        pv: 9800,\n        amt: 2290,\n    },\n    {\n        name: '30th Apr 2021',\n        uv: 1280,\n        pv: 3908,\n        amt: 2000,\n    },\n];\n\nconst Predictor = () => {\n    return <div style={{ width: 700, height: 260 }}>\n        <OverlayTrigger\n            placement={'right'}\n            overlay={\n                <Tooltipp style={{ opacity: 0.7 }} >\n                    See how much outreach your brand is getting across various social media platforms\n        </Tooltipp>\n            }\n        >\n            <div className=\"card-title text-left\">Outreach Predictor</div>\n        </OverlayTrigger>\n        < ResponsiveContainer width=\"100%\" height=\"100%\">\n            <AreaChart\n                width={200}\n                height={150}\n                data={data}\n                margin={{\n                    top: 10,\n                    right: 30,\n                    left: 0,\n                    bottom: 0,\n                }}\n            >\n                {/* <defs>\n                    <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"#E25960\" stopOpacity={0.8} />\n                        <stop offset=\"95%\" stopColor=\"#E25960\" stopOpacity={0} />\n                    </linearGradient>\n                    <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"#323232\" stopOpacity={0.8} />\n                        <stop offset=\"95%\" stopColor=\"#323232\" stopOpacity={0} />\n                    </linearGradient>\n                </defs> */}\n                <XAxis dataKey=\"name\" />\n                {/* <CartesianGrid strokeDasharray=\"5 5\" /> */}\n                <YAxis />\n                <Tooltip />\n                <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#627aa4\" fill=\"#627aa4\" />\n                <Area type=\"monotone\" dataKey=\"pv\" stroke=\"#eb8c9c\" fill=\"#eb8c9c\" />\n            </AreaChart>\n        </ResponsiveContainer>\n    </div>\n}\n\nexport default Predictor\n\n","/home/riya/social-monitoring/src/components/Dashboard/Buzz/index.js",["132","133","134","135","136","137","138","139","140"],"import React, { useState } from 'react'\nimport \"../Dashboard.css\"\nimport { Data } from './Data';\nimport BuzzBody from './BuzzBody';\nimport browser from \"../../../assets/browser.png\"\nimport youtube from \"../../../assets/youtube.png\"\nimport reddit from \"../../../assets/reddit.png\"\nimport google from \"../../../assets/google.png\"\nimport twitter from \"../../../assets/twitter.png\"\nimport Tooltip from 'react-bootstrap/Tooltip'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\n\n\nexport default function Index() {\n  const [active, setActive] = useState('All');\n\n  const handleActiveClick = value => {\n    setActive(value);\n  };\n\n  return (\n    <div className=\"buzz\">\n      <OverlayTrigger\n        placement={'right'}\n        overlay={\n          <Tooltip style={{ opacity: 0.7 }} >\n            See all the mentions of your brand across various social media platforms\n        </Tooltip>\n        }\n      >\n        <div className=\"card-title text-left\">Social Media Buzz </div>\n      </OverlayTrigger>\n\n      <article className=\"panel is-info\">\n        <p className=\"panel-tabs is-boxed\">\n          <a\n            name=\"All\"\n            className={active === 'All' ? 'd-flex d-flex is-active' : 'd-flex'}\n            onClick={e => handleActiveClick('All')}>\n            <div className=\"mr-2\"><img src={browser} style={{ height: 20, width: 20 }} /></div>\n\n                        All\n          </a>\n          <a\n            name=\"Reddit\"\n            className={active === 'Reddit' ? 'd-flex is-active' : 'd-flex'}\n            onClick={e => handleActiveClick('Reddit')}>\n            <div className=\"mr-2\"><img src={reddit} style={{ height: 20, width: 20 }} /></div>\n\n                        Reddit\n          </a>\n          <a\n            name=\"Youtube\"\n            className={active === 'Youtube' ? 'd-flex is-active' : 'd-flex'}\n            onClick={e => handleActiveClick('Youtube')}>\n            <div className=\"mr-2\"><img src={youtube} style={{ height: 20, width: 20 }} /></div>\n\n                        Youtube\n          </a>\n          <a\n            name=\"Twitter\"\n            className={active === 'Twitter' ? 'd-flex is-active' : 'd-flex'}\n            onClick={e => handleActiveClick('Twitter')}>\n            <div className=\"mr-2\"><img src={twitter} style={{ height: 20, width: 20 }} /></div>\n\n                        Twitter\n          </a>\n        </p>\n\n        {active === 'All'\n          ? Data.map(i => <BuzzBody data={i} />)\n          : active === 'Reddit'\n            ? Data.filter(i => i.media === 'Reddit').map(i => <BuzzBody data={i} />)\n            : active === 'Youtube'\n              ? Data.filter(i => i.media === 'Youtube').map(i => <BuzzBody data={i} />)\n              : active === 'Twitter'\n                ? Data.filter(i => i.media === 'Twitter').map(i => <BuzzBody data={i} />)\n                : null}\n      </article>\n    </div>\n  );\n}\n\n","/home/riya/social-monitoring/src/components/Dashboard/Buzz/Data.js",[],"/home/riya/social-monitoring/src/components/Dashboard/Buzz/BuzzBody.js",["141","142","143"],"import React from 'react';\nimport youtube from \"../../../assets/youtube.png\"\nimport reddit from \"../../../assets/reddit.png\"\nimport google from \"../../../assets/google.png\"\nimport twitter from \"../../../assets/twitter.png\"\n\nexport default function BuzzBody({ data }) {\n    const imgHandler = value => {\n        switch (value) {\n            case 'Reddit':\n                return reddit;\n            case 'Youtube':\n                return youtube;\n            case 'Twitter':\n                return twitter;\n        }\n    };\n    return (\n        <a className=\"panel-block All\" href={data.link}>\n            <div className=\"flex-column\">\n                <div className=\"d-flex ml-2 font-weight-bold\">\n                    <div ><img src={imgHandler(data.media)} style={{ height: 20, width: 20, borderRadius: \"60%\" }} /></div>\n                    <span className=\"ml-2\">{data.media}</span>\n                </div>\n                <div className=\"ml-2\" style={{ width: 520 }}>{data.title}</div>\n            </div>\n        </a>\n    );\n}\n","/home/riya/social-monitoring/src/components/Auth/Signup.js",["144","145","146","147","148","149","150"],{"ruleId":"151","severity":1,"message":"152","line":5,"column":8,"nodeType":"153","messageId":"154","endLine":5,"endColumn":11},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"151","severity":1,"message":"159","line":5,"column":8,"nodeType":"153","messageId":"154","endLine":5,"endColumn":15},{"ruleId":"151","severity":1,"message":"160","line":3,"column":10,"nodeType":"153","messageId":"154","endLine":3,"endColumn":14},{"ruleId":"151","severity":1,"message":"161","line":4,"column":10,"nodeType":"153","messageId":"154","endLine":4,"endColumn":14},{"ruleId":"151","severity":1,"message":"162","line":4,"column":16,"nodeType":"153","messageId":"154","endLine":4,"endColumn":22},{"ruleId":"163","severity":1,"message":"164","line":47,"column":28,"nodeType":"165","endLine":47,"endColumn":85},{"ruleId":"151","severity":1,"message":"166","line":2,"column":25,"nodeType":"153","messageId":"154","endLine":2,"endColumn":31},{"ruleId":"151","severity":1,"message":"167","line":3,"column":41,"nodeType":"153","messageId":"154","endLine":3,"endColumn":54},{"ruleId":"151","severity":1,"message":"167","line":2,"column":41,"nodeType":"153","messageId":"154","endLine":2,"endColumn":54},{"ruleId":"168","severity":1,"message":"169","line":14,"column":8,"nodeType":"170","endLine":14,"endColumn":25,"suggestions":"171"},{"ruleId":"151","severity":1,"message":"172","line":2,"column":8,"nodeType":"153","messageId":"154","endLine":2,"endColumn":21},{"ruleId":"151","severity":1,"message":"173","line":13,"column":9,"nodeType":"153","messageId":"154","endLine":13,"endColumn":16},{"ruleId":"151","severity":1,"message":"167","line":2,"column":41,"nodeType":"153","messageId":"154","endLine":2,"endColumn":54},{"ruleId":"151","severity":1,"message":"174","line":8,"column":8,"nodeType":"153","messageId":"154","endLine":8,"endColumn":14},{"ruleId":"175","severity":1,"message":"176","line":36,"column":11,"nodeType":"165","endLine":39,"endColumn":53},{"ruleId":"163","severity":1,"message":"164","line":40,"column":35,"nodeType":"165","endLine":40,"endColumn":90},{"ruleId":"175","severity":1,"message":"176","line":44,"column":11,"nodeType":"165","endLine":47,"endColumn":56},{"ruleId":"163","severity":1,"message":"164","line":48,"column":35,"nodeType":"165","endLine":48,"endColumn":89},{"ruleId":"175","severity":1,"message":"176","line":52,"column":11,"nodeType":"165","endLine":55,"endColumn":57},{"ruleId":"163","severity":1,"message":"164","line":56,"column":35,"nodeType":"165","endLine":56,"endColumn":90},{"ruleId":"175","severity":1,"message":"176","line":60,"column":11,"nodeType":"165","endLine":63,"endColumn":57},{"ruleId":"163","severity":1,"message":"164","line":64,"column":35,"nodeType":"165","endLine":64,"endColumn":90},{"ruleId":"151","severity":1,"message":"174","line":4,"column":8,"nodeType":"153","messageId":"154","endLine":4,"endColumn":14},{"ruleId":"177","severity":1,"message":"178","line":9,"column":9,"nodeType":"179","messageId":"180","endLine":16,"endColumn":10},{"ruleId":"163","severity":1,"message":"164","line":22,"column":27,"nodeType":"165","endLine":22,"endColumn":118},{"ruleId":"151","severity":1,"message":"161","line":4,"column":10,"nodeType":"153","messageId":"154","endLine":4,"endColumn":14},{"ruleId":"151","severity":1,"message":"162","line":4,"column":16,"nodeType":"153","messageId":"154","endLine":4,"endColumn":22},{"ruleId":"151","severity":1,"message":"181","line":5,"column":10,"nodeType":"153","messageId":"154","endLine":5,"endColumn":25},{"ruleId":"151","severity":1,"message":"182","line":6,"column":10,"nodeType":"153","messageId":"154","endLine":6,"endColumn":16},{"ruleId":"151","severity":1,"message":"183","line":6,"column":18,"nodeType":"153","messageId":"154","endLine":6,"endColumn":24},{"ruleId":"151","severity":1,"message":"184","line":22,"column":13,"nodeType":"153","messageId":"154","endLine":22,"endColumn":25},{"ruleId":"163","severity":1,"message":"164","line":75,"column":59,"nodeType":"165","endLine":75,"endColumn":115},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["185"],"no-negated-in-lhs",["186"],"'Sockett' is defined but never used.","'Link' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Sector' is defined but never used.","'CartesianGrid' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMessages'. Either include it or remove the dependency array.","ArrayExpression",["187"],"'axiosInstance' is defined but never used.","'options' is assigned a value but never used.","'google' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'FontAwesomeIcon' is defined but never used.","'faUser' is defined but never used.","'faLock' is defined but never used.","'authDispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},"Update the dependencies array to be: [getMessages, messages.length]",{"range":"190","text":"191"},[361,378],"[getMessages, messages.length]"]