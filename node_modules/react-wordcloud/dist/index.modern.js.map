{"version":3,"file":"index.modern.js","sources":["../src/optimized-d3-cloud.js","../src/utils.js","../src/layout.js","../src/index.js","../src/hooks.js"],"sourcesContent":["// @ts-nocheck\n/**\n * Author: Augustinas (https://github.com/WhoAteDaCake)\n * Source: https://github.com/chrisrzhou/react-wordcloud/blob/166d0b0400a87647fe4e7855a26fe581ce38a502/src/cloud.ts\n * TEMPORARY workaround\n *\n * Implements the wordcloud algorithm based on: https://github.com/jasondavies/d3-cloud/tree/v1.2.5\n * Improvements:\n *  Use a setTimeout + batch sizes to calculate clouds in order to avoid blocking main thread for two long (87-101)\n *\n */\n\n// Word cloud layout by Jason Davies, https://www.jasondavies.com/wordcloud/\n// Algorithm due to Jonathan Feinberg, http://static.mrfeinberg.com/bv_ch03.pdf\n\nimport { dispatch } from 'd3-dispatch';\n\nconst cloudRadians = Math.PI / 180,\n  cw = (1 << 11) >> 5,\n  ch = 1 << 11;\n\nexport default function Cloud() {\n  let size = [256, 256],\n    text = cloudText,\n    font = cloudFont,\n    fontSize = cloudFontSize,\n    fontStyle = cloudFontNormal,\n    fontWeight = cloudFontNormal,\n    rotate = cloudRotate,\n    padding = cloudPadding,\n    spiral = archimedeanSpiral,\n    words = [],\n    timeInterval = Infinity,\n    event = dispatch('word', 'end'),\n    timer = null,\n    random = Math.random,\n    cloud = {},\n    canvas = cloudCanvas;\n\n  let killed = false;\n\n  cloud.canvas = function(_) {\n    return arguments.length ? ((canvas = functor(_)), cloud) : canvas;\n  };\n\n  cloud.start = function() {\n    let contextAndRatio = getContext(canvas()),\n      board = zeroArray((size[0] >> 5) * size[1]),\n      bounds = null,\n      n = words.length,\n      i = -1,\n      tags = [],\n      data = words\n        .map(function(d, i) {\n          d.text = text.call(this, d, i);\n          d.font = font.call(this, d, i);\n          d.style = fontStyle.call(this, d, i);\n          d.weight = fontWeight.call(this, d, i);\n          d.rotate = rotate.call(this, d, i);\n          d.size = ~~fontSize.call(this, d, i);\n          d.padding = padding.call(this, d, i);\n          return d;\n        })\n        .sort(function(a, b) {\n          return b.size - a.size;\n        });\n\n    // Added by react-wordcloud\n    // Allows to calculate a subset of data instead of all of the words at once\n    function multiStep(from, to) {\n      for (let i = from; i < to; i += 1) {\n        const d = data[i];\n        d.x = (size[0] * (random() + 0.5)) >> 1;\n        d.y = (size[1] * (random() + 0.5)) >> 1;\n        cloudSprite(contextAndRatio, d, data, i);\n        if (d.hasText && place(board, d, bounds)) {\n          tags.push(d);\n          event.call('word', cloud, d);\n          if (bounds) cloudBounds(bounds, d);\n          else\n            bounds = [\n              { x: d.x + d.x0, y: d.y + d.y0 },\n              { x: d.x + d.x1, y: d.y + d.y1 },\n            ];\n          // Temporary hack\n          d.x -= size[0] >> 1;\n          d.y -= size[1] >> 1;\n        }\n      }\n    }\n\n    // Added by react-wordcloud\n    // Iterates dataset using setTimeout in order to prevent blocking of the main thread\n    function loop(i) {\n      const step = 50;\n      const from = i * step;\n      const to = Math.min((i + 1) * step, words.length);\n      multiStep(from, to);\n      if (killed) {\n        return;\n      }\n      if (to < words.length) {\n        setTimeout(() => loop(i + 1), 0);\n      } else {\n        cloud.stop();\n        event.call('end', cloud, tags, bounds);\n      }\n    }\n    setTimeout(() => loop(0), 0);\n\n    return cloud;\n  };\n\n  cloud.revive = () => {\n    killed = false;\n    return cloud;\n  };\n\n  cloud.stop = function() {\n    if (timer) {\n      clearInterval(timer);\n      timer = null;\n    }\n    killed = true;\n    return cloud;\n  };\n\n  function getContext(canvas) {\n    canvas.width = canvas.height = 1;\n    const ratio = Math.sqrt(\n      canvas.getContext('2d').getImageData(0, 0, 1, 1).data.length >> 2,\n    );\n    canvas.width = (cw << 5) / ratio;\n    canvas.height = ch / ratio;\n\n    const context = canvas.getContext('2d');\n    context.fillStyle = context.strokeStyle = 'red';\n    context.textAlign = 'center';\n\n    return { context: context, ratio: ratio };\n  }\n\n  function place(board, tag, bounds) {\n    let perimeter = [{ x: 0, y: 0 }, { x: size[0], y: size[1] }],\n      startX = tag.x,\n      startY = tag.y,\n      maxDelta = Math.sqrt(size[0] * size[0] + size[1] * size[1]),\n      s = spiral(size),\n      dt = random() < 0.5 ? 1 : -1,\n      t = -dt,\n      dxdy,\n      dx,\n      dy;\n\n    while ((dxdy = s((t += dt)))) {\n      dx = ~~dxdy[0];\n      dy = ~~dxdy[1];\n\n      if (Math.min(Math.abs(dx), Math.abs(dy)) >= maxDelta) break;\n\n      tag.x = startX + dx;\n      tag.y = startY + dy;\n\n      if (\n        tag.x + tag.x0 < 0 ||\n        tag.y + tag.y0 < 0 ||\n        tag.x + tag.x1 > size[0] ||\n        tag.y + tag.y1 > size[1]\n      )\n        continue;\n      // TODO only check for collisions within current bounds.\n      if (!bounds || !cloudCollide(tag, board, size[0])) {\n        if (!bounds || collideRects(tag, bounds)) {\n          var sprite = tag.sprite,\n            w = tag.width >> 5,\n            sw = size[0] >> 5,\n            lx = tag.x - (w << 4),\n            sx = lx & 0x7f,\n            msx = 32 - sx,\n            h = tag.y1 - tag.y0,\n            x = (tag.y + tag.y0) * sw + (lx >> 5),\n            last;\n          for (let j = 0; j < h; j++) {\n            last = 0;\n            for (let i = 0; i <= w; i++) {\n              board[x + i] |=\n                (last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);\n            }\n            x += sw;\n          }\n          delete tag.sprite;\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  cloud.timeInterval = function(_) {\n    return arguments.length\n      ? ((timeInterval = _ == null ? Infinity : _), cloud)\n      : timeInterval;\n  };\n\n  cloud.words = function(_) {\n    return arguments.length ? ((words = _), cloud) : words;\n  };\n\n  cloud.size = function(_) {\n    return arguments.length ? ((size = [+_[0], +_[1]]), cloud) : size;\n  };\n\n  cloud.font = function(_) {\n    return arguments.length ? ((font = functor(_)), cloud) : font;\n  };\n\n  cloud.fontStyle = function(_) {\n    return arguments.length ? ((fontStyle = functor(_)), cloud) : fontStyle;\n  };\n\n  cloud.fontWeight = function(_) {\n    return arguments.length ? ((fontWeight = functor(_)), cloud) : fontWeight;\n  };\n\n  cloud.rotate = function(_) {\n    return arguments.length ? ((rotate = functor(_)), cloud) : rotate;\n  };\n\n  cloud.text = function(_) {\n    return arguments.length ? ((text = functor(_)), cloud) : text;\n  };\n\n  cloud.spiral = function(_) {\n    return arguments.length ? ((spiral = spirals[_] || _), cloud) : spiral;\n  };\n\n  cloud.fontSize = function(_) {\n    return arguments.length ? ((fontSize = functor(_)), cloud) : fontSize;\n  };\n\n  cloud.padding = function(_) {\n    return arguments.length ? ((padding = functor(_)), cloud) : padding;\n  };\n\n  cloud.random = function(_) {\n    return arguments.length ? ((random = _), cloud) : random;\n  };\n\n  cloud.on = function() {\n    const value = event.on.apply(event, arguments);\n    return value === event ? cloud : value;\n  };\n\n  return cloud;\n}\n\nfunction cloudText(d) {\n  return d.text;\n}\n\nfunction cloudFont() {\n  return 'serif';\n}\n\nfunction cloudFontNormal() {\n  return 'normal';\n}\n\nfunction cloudFontSize(d) {\n  return Math.sqrt(d.value);\n}\n\nfunction cloudRotate() {\n  return (~~(Math.random() * 6) - 3) * 30;\n}\n\nfunction cloudPadding() {\n  return 1;\n}\n\n// Fetches a monochrome sprite bitmap for the specified text.\n// Load in batches for speed.\nfunction cloudSprite(contextAndRatio, d, data, di) {\n  if (d.sprite) return;\n  const c = contextAndRatio.context,\n    ratio = contextAndRatio.ratio;\n\n  c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);\n  let x = 0,\n    y = 0,\n    maxh = 0,\n    n = data.length;\n  --di;\n  while (++di < n) {\n    d = data[di];\n    c.save();\n    c.font =\n      d.style +\n      ' ' +\n      d.weight +\n      ' ' +\n      ~~((d.size + 1) / ratio) +\n      'px ' +\n      d.font;\n    var w = c.measureText(d.text + 'm').width * ratio,\n      h = d.size << 1;\n    if (d.rotate) {\n      const sr = Math.sin(d.rotate * cloudRadians),\n        cr = Math.cos(d.rotate * cloudRadians),\n        wcr = w * cr,\n        wsr = w * sr,\n        hcr = h * cr,\n        hsr = h * sr;\n      w =\n        ((Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f) >> 5) << 5;\n      h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\n    } else {\n      w = ((w + 0x1f) >> 5) << 5;\n    }\n    if (h > maxh) maxh = h;\n    if (x + w >= cw << 5) {\n      x = 0;\n      y += maxh;\n      maxh = 0;\n    }\n    if (y + h >= ch) break;\n    c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);\n    if (d.rotate) c.rotate(d.rotate * cloudRadians);\n    c.fillText(d.text, 0, 0);\n\n    if (d.padding) {\n      c.lineWidth = 2 * d.padding;\n      c.strokeText(d.text, 0, 0);\n    }\n    c.restore();\n    d.width = w;\n    d.height = h;\n    d.xoff = x;\n    d.yoff = y;\n    d.x1 = w >> 1;\n    d.y1 = h >> 1;\n    d.x0 = -d.x1;\n    d.y0 = -d.y1;\n    d.hasText = true;\n    x += w;\n  }\n  const pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data,\n    sprite = [];\n  while (--di >= 0) {\n    d = data[di];\n    if (!d.hasText) continue;\n    var w = d.width,\n      w32 = w >> 5,\n      h = d.y1 - d.y0;\n    // Zero the buffer\n    for (var i = 0; i < h * w32; i++) sprite[i] = 0;\n    x = d.xoff;\n    if (x == null) return;\n    y = d.yoff;\n    let seen = 0,\n      seenRow = -1;\n    for (let j = 0; j < h; j++) {\n      for (var i = 0; i < w; i++) {\n        const k = w32 * j + (i >> 5),\n          m = pixels[((y + j) * (cw << 5) + (x + i)) << 2]\n            ? 1 << (31 - (i % 32))\n            : 0;\n        sprite[k] |= m;\n        seen |= m;\n      }\n      if (seen) seenRow = j;\n      else {\n        d.y0++;\n        h--;\n        j--;\n        y++;\n      }\n    }\n    d.y1 = d.y0 + seenRow;\n    d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);\n  }\n}\n\n// Use mask-based collision detection.\nfunction cloudCollide(tag, board, sw) {\n  sw >>= 5;\n  let sprite = tag.sprite,\n    w = tag.width >> 5,\n    lx = tag.x - (w << 4),\n    sx = lx & 0x7f,\n    msx = 32 - sx,\n    h = tag.y1 - tag.y0,\n    x = (tag.y + tag.y0) * sw + (lx >> 5),\n    last;\n  for (let j = 0; j < h; j++) {\n    last = 0;\n    for (let i = 0; i <= w; i++) {\n      if (\n        ((last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0)) &\n        board[x + i]\n      )\n        return true;\n    }\n    x += sw;\n  }\n  return false;\n}\n\nfunction cloudBounds(bounds, d) {\n  const b0 = bounds[0],\n    b1 = bounds[1];\n  if (d.x + d.x0 < b0.x) b0.x = d.x + d.x0;\n  if (d.y + d.y0 < b0.y) b0.y = d.y + d.y0;\n  if (d.x + d.x1 > b1.x) b1.x = d.x + d.x1;\n  if (d.y + d.y1 > b1.y) b1.y = d.y + d.y1;\n}\n\nfunction collideRects(a, b) {\n  return (\n    a.x + a.x1 > b[0].x &&\n    a.x + a.x0 < b[1].x &&\n    a.y + a.y1 > b[0].y &&\n    a.y + a.y0 < b[1].y\n  );\n}\n\nfunction archimedeanSpiral(size) {\n  const e = size[0] / size[1];\n  return function(t) {\n    return [e * (t *= 0.1) * Math.cos(t), t * Math.sin(t)];\n  };\n}\n\nfunction rectangularSpiral(size) {\n  let dy = 4,\n    dx = (dy * size[0]) / size[1],\n    x = 0,\n    y = 0;\n  return function(t) {\n    const sign = t < 0 ? -1 : 1;\n    // See triangular numbers: T_n = n * (n + 1) / 2.\n    switch ((Math.sqrt(1 + 4 * sign * t) - sign) & 3) {\n      case 0:\n        x += dx;\n        break;\n      case 1:\n        y += dy;\n        break;\n      case 2:\n        x -= dx;\n        break;\n      default:\n        y -= dy;\n        break;\n    }\n    return [x, y];\n  };\n}\n\nfunction zeroArray(n) {\n  const a = new Uint32Array(n);\n  return a;\n}\n\nfunction cloudCanvas() {\n  return document.createElement('canvas');\n}\n\nfunction functor(d) {\n  return typeof d === 'function'\n    ? d\n    : function() {\n        return d;\n      };\n}\n\nvar spirals = {\n  archimedean: archimedeanSpiral,\n  rectangular: rectangularSpiral,\n};\n","import { max, min, range } from 'd3-array';\nimport { scaleLinear, scaleLog, scaleOrdinal, scaleSqrt } from 'd3-scale';\nimport { schemeCategory10 } from 'd3-scale-chromatic';\n\nexport function choose(array, random) {\n  return array[Math.floor(random() * array.length)];\n}\n\nexport function getDefaultColors() {\n  return range(20)\n    .map(number => number.toString())\n    .map(scaleOrdinal(schemeCategory10));\n}\n\nexport function getFontScale(words, fontSizes, scale) {\n  const minSize = min(words, word => Number(word.value));\n  const maxSize = max(words, word => Number(word.value));\n  let scaleFunction;\n  switch (scale) {\n    case 'log':\n      scaleFunction = scaleLog;\n      break;\n    case 'sqrt':\n      scaleFunction = scaleSqrt;\n      break;\n    case 'linear':\n    default:\n      scaleFunction = scaleLinear;\n      break;\n  }\n\n  const fontScale = scaleFunction()\n    .domain([minSize, maxSize])\n    .range(fontSizes);\n  return fontScale;\n}\n\nexport function getFontSize(word) {\n  return `${word.size}px`;\n}\n\nexport function getText(word) {\n  return word.text;\n}\n\nexport function getTransform(word) {\n  const translate = `translate(${word.x}, ${word.y})`;\n  const rotate =\n    typeof word.rotate === 'number' ? `rotate(${word.rotate})` : '';\n  return translate + rotate;\n}\n\nexport function rotate(rotations, rotationAngles, random) {\n  if (rotations < 1) {\n    return 0;\n  }\n\n  let angles = [];\n  if (rotations === 1) {\n    angles = [rotationAngles[0]];\n  } else {\n    angles = [...rotationAngles];\n    const increment = (rotationAngles[1] - rotationAngles[0]) / (rotations - 1);\n    let angle = rotationAngles[0] + increment;\n    while (angle < rotationAngles[1]) {\n      angles.push(angle);\n      angle += increment;\n    }\n  }\n\n  return choose(angles, random);\n}\n","import 'd3-transition';\n\nimport { descending } from 'd3-array';\nimport d3Cloud from 'd3-cloud';\nimport { event } from 'd3-selection';\nimport clonedeep from 'lodash.clonedeep';\nimport seedrandom from 'seedrandom';\nimport tippy from 'tippy.js';\n\nimport optimizedD3Cloud from './optimized-d3-cloud';\nimport {\n  choose,\n  getFontScale,\n  getFontSize,\n  getText,\n  getTransform,\n  rotate,\n} from './utils';\n\nexport function render({ callbacks, options, random, selection, words }) {\n  const {\n    getWordColor,\n    getWordTooltip,\n    onWordClick,\n    onWordMouseOver,\n    onWordMouseOut,\n  } = callbacks;\n  const {\n    colors,\n    enableTooltip,\n    fontStyle,\n    fontWeight,\n    textAttributes,\n    tooltipOptions,\n  } = options;\n  const { fontFamily, transitionDuration } = options;\n\n  function getFill(word) {\n    return getWordColor ? getWordColor(word) : choose(colors, random);\n  }\n\n  // Load words\n  let tooltipInstance;\n  const vizWords = selection.selectAll('text').data(words);\n  vizWords.join(\n    enter => {\n      let text = enter\n        .append('text')\n        .on('click', word => {\n          if (onWordClick) {\n            onWordClick(word, event);\n          }\n        })\n        .on('mouseover', word => {\n          if (enableTooltip) {\n            tooltipInstance = tippy(event.target, {\n              animation: 'scale',\n              arrow: true,\n              content: () => getWordTooltip(word),\n              ...tooltipOptions,\n            });\n          }\n\n          if (onWordMouseOver) {\n            onWordMouseOver(word, event);\n          }\n        })\n        .on('mouseout', word => {\n          if (tooltipInstance) {\n            tooltipInstance.destroy();\n          }\n\n          if (onWordMouseOut) {\n            onWordMouseOut(word, event);\n          }\n        })\n        .attr('cursor', onWordClick ? 'pointer' : 'default')\n        .attr('fill', getFill)\n        .attr('font-family', fontFamily)\n        .attr('font-style', fontStyle)\n        .attr('font-weight', fontWeight)\n        .attr('text-anchor', 'middle')\n        .attr('transform', 'translate(0, 0) rotate(0)');\n\n      if (typeof textAttributes === 'object') {\n        Object.keys(textAttributes).forEach(key => {\n          text = text.attr(key, textAttributes[key]);\n        });\n      }\n\n      text = text.call(enter =>\n        enter\n          .transition()\n          .duration(transitionDuration)\n          .attr('font-size', getFontSize)\n          .attr('transform', getTransform)\n          .text(getText),\n      );\n    },\n    update => {\n      update\n        .transition()\n        .duration(transitionDuration)\n        .attr('fill', getFill)\n        .attr('font-family', fontFamily)\n        .attr('font-size', getFontSize)\n        .attr('transform', getTransform)\n        .text(getText);\n    },\n    exit => {\n      exit\n        .transition()\n        .duration(transitionDuration)\n        .attr('fill-opacity', 0)\n        .remove();\n    },\n  );\n}\n\nexport function layout({\n  callbacks,\n  maxWords,\n  options,\n  selection,\n  size,\n  words,\n}) {\n  const MAX_LAYOUT_ATTEMPTS = 10;\n  const SHRINK_FACTOR = 0.95;\n  const {\n    deterministic,\n    enableOptimizations,\n    fontFamily,\n    fontStyle,\n    fontSizes,\n    fontWeight,\n    padding,\n    randomSeed,\n    rotations,\n    rotationAngles,\n    spiral,\n    scale,\n  } = options;\n\n  const sortedWords = words\n    .concat()\n    .sort((x, y) => descending(x.value, y.value))\n    .slice(0, maxWords);\n\n  const random = seedrandom(\n    deterministic ? randomSeed || 'deterministic' : null,\n  );\n\n  let cloud;\n  if (enableOptimizations) {\n    cloud = optimizedD3Cloud();\n  } else {\n    cloud = d3Cloud();\n  }\n\n  cloud\n    .size(size)\n    // @ts-ignore\n    .padding(padding)\n    .words(clonedeep(sortedWords))\n    .rotate(() => {\n      if (rotations === undefined) {\n        // Default rotation algorithm\n        return (~~(random() * 6) - 3) * 30;\n      }\n\n      return rotate(rotations, rotationAngles, random);\n    })\n    .spiral(spiral)\n    .random(random)\n    .text(getText)\n    .font(fontFamily)\n    .fontStyle(fontStyle)\n    .fontWeight(fontWeight);\n\n  function draw(fontSizes, attempts = 1) {\n    if (enableOptimizations) {\n      cloud.revive();\n    }\n\n    cloud\n      .fontSize(word => {\n        const fontScale = getFontScale(sortedWords, fontSizes, scale);\n        return fontScale(word.value);\n      })\n      .on('end', computedWords => {\n        /** KNOWN ISSUE: https://github.com/jasondavies/d3-cloud/issues/36\n         * Recursively layout and decrease font-sizes by a SHRINK_FACTOR.\n         * Bail out with a warning message after MAX_LAYOUT_ATTEMPTS.\n         */\n        if (\n          sortedWords.length !== computedWords.length &&\n          attempts <= MAX_LAYOUT_ATTEMPTS\n        ) {\n          if (attempts === MAX_LAYOUT_ATTEMPTS) {\n            console.warn(\n              `Unable to layout ${sortedWords.length -\n                computedWords.length} word(s) after ${attempts} attempts.  Consider: (1) Increasing the container/component size. (2) Lowering the max font size. (3) Limiting the rotation angles.`,\n            );\n          }\n\n          const minFontSize = Math.max(fontSizes[0] * SHRINK_FACTOR, 1);\n          const maxFontSize = Math.max(\n            fontSizes[1] * SHRINK_FACTOR,\n            minFontSize,\n          );\n\n          draw([minFontSize, maxFontSize], attempts + 1);\n        } else {\n          render({\n            callbacks,\n            options,\n            random,\n            selection,\n            words: computedWords,\n          });\n        }\n      })\n      .start();\n  }\n\n  draw(fontSizes);\n}\n","import debounce from 'lodash.debounce';\nimport React, { useEffect, useRef } from 'react';\n\nimport { useResponsiveSvgSelection } from './hooks';\nimport { layout } from './layout';\nimport { getDefaultColors } from './utils';\n\nexport const defaultCallbacks = {\n  getWordTooltip: ({ text, value }) => `${text} (${value})`,\n};\n\nexport const defaultOptions = {\n  colors: getDefaultColors(),\n  deterministic: false,\n  enableOptimizations: false,\n  enableTooltip: true,\n  fontFamily: 'times new roman',\n  fontSizes: [4, 32],\n  fontStyle: 'normal',\n  fontWeight: 'normal',\n  padding: 1,\n  rotationAngles: [-90, 90],\n  scale: 'sqrt',\n  spiral: 'rectangular',\n  tooltipOptions: {},\n  transitionDuration: 600,\n};\n\nfunction ReactWordCloud({\n  callbacks,\n  maxWords = 100,\n  minSize,\n  options,\n  size: initialSize,\n  words,\n  ...rest\n}) {\n  const mergedCallbacks = { ...defaultCallbacks, ...callbacks };\n  const mergedOptions = { ...defaultOptions, ...options };\n\n  const [ref, selection, size] = useResponsiveSvgSelection(\n    minSize,\n    initialSize,\n    options.svgAttributes,\n  );\n\n  const render = useRef(debounce(layout, 100));\n\n  useEffect(() => {\n    if (selection) {\n      render.current({\n        callbacks: mergedCallbacks,\n        maxWords,\n        options: mergedOptions,\n        selection,\n        size,\n        words,\n      });\n    }\n  }, [maxWords, mergedCallbacks, mergedOptions, selection, size, words]);\n\n  return <div ref={ref} style={{ height: '100%', width: '100%' }} {...rest} />;\n}\n\nReactWordCloud.defaultProps = {\n  callbacks: defaultCallbacks,\n  maxWords: 100,\n  minSize: [300, 300],\n  options: defaultOptions,\n};\n\nexport default ReactWordCloud;\n","import { select } from 'd3-selection';\nimport { useEffect, useRef, useState } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nexport function useResponsiveSvgSelection(minSize, initialSize, svgAttributes) {\n  const elementRef = useRef();\n  const [size, setSize] = useState(initialSize);\n  const [selection, setSelection] = useState(null);\n\n  useEffect(() => {\n    const element = elementRef.current;\n\n    // Set svg selection\n    let svg = select(element)\n      .append('svg')\n      .style('display', 'block'); // Native inline svg leaves undesired white space\n\n    if (typeof svgAttributes === 'object') {\n      Object.keys(svgAttributes).forEach(key => {\n        svg = svg.attr(key, svgAttributes[key]);\n      });\n    }\n\n    const selection = svg.append('g');\n    setSelection(selection);\n\n    function updateSize(width, height) {\n      svg.attr('height', height).attr('width', width);\n      selection.attr('transform', `translate(${width / 2}, ${height / 2})`);\n      setSize([width, height]);\n    }\n\n    let width = 0;\n    let height = 0;\n    if (initialSize === undefined) {\n      // Use parentNode size if resized has not occurred\n      width = element.parentElement.offsetWidth;\n      height = element.parentElement.offsetHeight;\n    } else {\n      // Use initialSize if it is provided\n      [width, height] = initialSize;\n    }\n\n    width = Math.max(width, minSize[0]);\n    height = Math.max(height, minSize[1]);\n    updateSize(width, height);\n\n    // Update resize using a resize observer\n    const resizeObserver = new ResizeObserver(entries => {\n      if (!entries || entries.length === 0) {\n        return;\n      }\n\n      if (initialSize === undefined) {\n        const { width, height } = entries[0].contentRect;\n        updateSize(width, height);\n      }\n    });\n    resizeObserver.observe(element);\n\n    // Cleanup\n    return () => {\n      resizeObserver.unobserve(element);\n      select(element)\n        .selectAll('*')\n        .remove();\n    };\n  }, [initialSize, minSize, svgAttributes]);\n\n  return [elementRef, selection, size];\n}\n"],"names":["cloudRadians","Math","PI","cloudText","d","text","cloudFont","cloudFontNormal","cloudFontSize","sqrt","value","cloudRotate","random","cloudPadding","cloudSprite","contextAndRatio","data","di","sprite","c","context","ratio","clearRect","x","y","maxh","n","length","save","font","style","weight","size","w","measureText","width","h","rotate","sr","sin","cr","cos","wcr","wsr","hcr","hsr","max","abs","cw","translate","fillText","padding","lineWidth","strokeText","restore","height","xoff","yoff","x1","y1","x0","y0","hasText","pixels","getImageData","w32","i","seen","seenRow","j","m","slice","cloudCollide","tag","board","sw","last","lx","sx","msx","cloudBounds","bounds","b0","b1","archimedeanSpiral","e","t","cloudCanvas","document","createElement","functor","spirals","archimedean","rectangular","dx","sign","choose","array","floor","getFontSize","word","getText","getTransform","layout","callbacks","maxWords","options","selection","words","deterministic","enableOptimizations","fontFamily","fontStyle","fontSizes","fontWeight","randomSeed","rotations","rotationAngles","spiral","scale","sortedWords","concat","sort","descending","seedrandom","cloud","fontSize","timeInterval","Infinity","event","dispatch","canvas","killed","place","dxdy","dy","startX","startY","maxDelta","s","dt","min","a","b","_","arguments","start","getContext","fillStyle","strokeStyle","textAlign","Uint32Array","tags","map","call","this","setTimeout","loop","from","to","push","multiStep","stop","revive","on","apply","optimizedD3Cloud","d3Cloud","clonedeep","undefined","angles","increment","angle","draw","attempts","minSize","Number","maxSize","scaleFunction","scaleLog","scaleSqrt","scaleLinear","domain","range","getFontScale","fontScale","computedWords","console","warn","minFontSize","getWordColor","getWordTooltip","onWordClick","onWordMouseOver","onWordMouseOut","colors","enableTooltip","textAttributes","tooltipOptions","transitionDuration","getFill","tooltipInstance","selectAll","join","enter","append","tippy","target","animation","arrow","content","destroy","attr","Object","keys","forEach","key","transition","duration","update","exit","remove","render","defaultCallbacks","defaultOptions","number","toString","scaleOrdinal","schemeCategory10","ReactWordCloud","initialSize","rest","mergedCallbacks","mergedOptions","ref","svgAttributes","elementRef","useRef","setSize","useState","setSelection","useEffect","element","current","svg","select","updateSize","parentElement","offsetWidth","offsetHeight","resizeObserver","ResizeObserver","entries","contentRect","observe","unobserve","useResponsiveSvgSelection","debounce","React","defaultProps"],"mappings":"6iBAiBA,MAAMA,EAAeC,KAAKC,GAAK,IA+O/B,SAASC,EAAUC,GACjB,OAAOA,EAAEC,KAGX,SAASC,IACP,MAAO,QAGT,SAASC,IACP,MAAO,SAGT,SAASC,EAAcJ,GACrB,OAAOH,KAAKQ,KAAKL,EAAEM,OAGrB,SAASC,IACP,OAAqC,OAAV,EAAhBV,KAAKW,UAAgB,GAGlC,SAASC,IACP,SAKF,SAASC,EAAYC,EAAiBX,EAAGY,EAAMC,GAC7C,GAAIb,EAAEc,OAAQ,OACd,MAAMC,EAAIJ,EAAgBK,QACxBC,EAAQN,EAAgBM,MAE1BF,EAAEG,UAAU,EAAG,EAAG,KAAYD,EA5QzB,KA4QqCA,GAC1C,IAAIE,EAAI,EACNC,EAAI,EACJC,EAAO,EACPC,EAAIV,EAAKW,OAEX,MADEV,IACOA,EAAKS,GAAG,CACftB,EAAIY,EAAKC,GACTE,EAAES,OACFT,EAAEU,KACAzB,EAAE0B,MACF,IACA1B,EAAE2B,OACF,QACI3B,EAAE4B,KAAO,GAAKX,GAClB,MACAjB,EAAEyB,KACJ,IAAII,EAAId,EAAEe,YAAY9B,EAAEC,KAAO,KAAK8B,MAAQd,EAC1Ce,EAAIhC,EAAE4B,MAAQ,EAChB,GAAI5B,EAAEiC,OAAQ,CACZ,MAAMC,EAAKrC,KAAKsC,IAAInC,EAAEiC,OAASrC,GAC7BwC,EAAKvC,KAAKwC,IAAIrC,EAAEiC,OAASrC,GACzB0C,EAAMT,EAAIO,EACVG,EAAMV,EAAIK,EACVM,EAAMR,EAAII,EACVK,EAAMT,EAAIE,EACZL,EACIhC,KAAK6C,IAAI7C,KAAK8C,IAAIL,EAAMG,GAAM5C,KAAK8C,IAAIL,EAAMG,IAAQ,IAAS,GAAM,EACxET,IAAMnC,KAAK6C,IAAI7C,KAAK8C,IAAIJ,EAAMC,GAAM3C,KAAK8C,IAAIJ,EAAMC,SAEnDX,EAAMA,EAAI,IAAS,GAAM,EAQ3B,GANIG,EAAIX,IAAMA,EAAOW,GACjBb,EAAIU,GAAKe,OACXzB,EAAI,EACJC,GAAKC,EACLA,EAAO,GAELD,EAAIY,GAlTL,KAkTc,MACjBjB,EAAE8B,WAAW1B,GAAKU,GAAK,IAAMZ,GAAQG,GAAKY,GAAK,IAAMf,GACjDjB,EAAEiC,QAAQlB,EAAEkB,OAAOjC,EAAEiC,OAASrC,GAClCmB,EAAE+B,SAAS9C,EAAEC,KAAM,EAAG,GAElBD,EAAE+C,UACJhC,EAAEiC,UAAY,EAAIhD,EAAE+C,QACpBhC,EAAEkC,WAAWjD,EAAEC,KAAM,EAAG,IAE1Bc,EAAEmC,UACFlD,EAAE+B,MAAQF,EACV7B,EAAEmD,OAASnB,EACXhC,EAAEoD,KAAOjC,EACTnB,EAAEqD,KAAOjC,EACTpB,EAAEsD,GAAKzB,GAAK,EACZ7B,EAAEuD,GAAKvB,GAAK,EACZhC,EAAEwD,IAAMxD,EAAEsD,GACVtD,EAAEyD,IAAMzD,EAAEuD,GACVvD,EAAE0D,SAAU,EACZvC,GAAKU,EAEP,MAAM8B,EAAS5C,EAAE6C,aAAa,EAAG,EAAG,KAAY3C,EAvU3C,KAuUuDA,GAAOL,KACjEE,EAAS,GACX,OAASD,GAAM,GAAG,CAEhB,KADAb,EAAIY,EAAKC,IACF6C,QAAS,SAKhB,IAJA,IACEG,GADEhC,EAAI7B,EAAE+B,QACG,EAGJ+B,GAFP9B,EAAIhC,EAAEuD,GAAKvD,EAAEyD,GAEF,GAAGK,EAAI9B,EAAI6B,EAAKC,IAAKhD,EAAOgD,GAAK,EAE9C,GADA3C,EAAInB,EAAEoD,KACG,MAALjC,EAAW,OACfC,EAAIpB,EAAEqD,KACN,IAAIU,EAAO,EACTC,GAAW,EACb,IAAK,IAAIC,EAAI,EAAGA,EAAIjC,EAAGiC,IAAK,CAC1B,IAASH,EAAI,EAAGA,EAAIjC,EAAGiC,IAAK,CAC1B,MACEI,EAAIP,QAASvC,EAAI6C,IAAkB9C,EAAI2C,IAAO,GAC1C,GAAM,GAAMA,EAAI,GAChB,EACNhD,EAJU+C,EAAMI,GAAKH,GAAK,KAIbI,EACbH,GAAQG,EAENH,EAAMC,EAAUC,GAElBjE,EAAEyD,KACFzB,IACAiC,IACA7C,KAGJpB,EAAEuD,GAAKvD,EAAEyD,GAAKO,EACdhE,EAAEc,OAASA,EAAOqD,MAAM,GAAInE,EAAEuD,GAAKvD,EAAEyD,IAAMI,IAK/C,SAASO,EAAaC,EAAKC,EAAOC,GAEhC,IAOEC,EAPE1D,EAASuD,EAAIvD,OACfe,EAAIwC,EAAItC,OAAS,EACjB0C,EAAKJ,EAAIlD,GAAKU,GAAK,GACnB6C,EAAU,IAALD,EACLE,EAAM,GAAKD,EACX1C,EAAIqC,EAAId,GAAKc,EAAIZ,GACjBtC,GAAKkD,EAAIjD,EAAIiD,EAAIZ,KAPnBc,IAAO,IAOwBE,GAAM,GAErC,IAAK,IAAIR,EAAI,EAAGA,EAAIjC,EAAGiC,IAAK,CAC1BO,EAAO,EACP,IAAK,IAAIV,EAAI,EAAGA,GAAKjC,EAAGiC,IACtB,IACIU,GAAQG,GAAQb,EAAIjC,GAAK2C,EAAO1D,EAAOmD,EAAIpC,EAAIiC,MAAQY,EAAK,IAC9DJ,EAAMnD,EAAI2C,GAEV,SAEJ3C,GAAKoD,EAEP,SAGF,SAASK,EAAYC,EAAQ7E,GAC3B,MAAM8E,EAAKD,EAAO,GAChBE,EAAKF,EAAO,GACV7E,EAAEmB,EAAInB,EAAEwD,GAAKsB,EAAG3D,IAAG2D,EAAG3D,EAAInB,EAAEmB,EAAInB,EAAEwD,IAClCxD,EAAEoB,EAAIpB,EAAEyD,GAAKqB,EAAG1D,IAAG0D,EAAG1D,EAAIpB,EAAEoB,EAAIpB,EAAEyD,IAClCzD,EAAEmB,EAAInB,EAAEsD,GAAKyB,EAAG5D,IAAG4D,EAAG5D,EAAInB,EAAEmB,EAAInB,EAAEsD,IAClCtD,EAAEoB,EAAIpB,EAAEuD,GAAKwB,EAAG3D,IAAG2D,EAAG3D,EAAIpB,EAAEoB,EAAIpB,EAAEuD,IAYxC,SAASyB,EAAkBpD,GACzB,MAAMqD,EAAIrD,EAAK,GAAKA,EAAK,GACzB,gBAAgBsD,GACd,MAAO,CAACD,GAAKC,GAAK,IAAOrF,KAAKwC,IAAI6C,GAAIA,EAAIrF,KAAKsC,IAAI+C,KAmCvD,SAASC,IACP,OAAOC,SAASC,cAAc,UAGhC,SAASC,EAAQtF,GACf,MAAoB,mBAANA,EACVA,EACA,WACE,OAAOA,GAIf,IAAIuF,EAAU,CACZC,YAAaR,EACbS,YA7CF,SAA2B7D,GACzB,IACE8D,EADO,EACI9D,EAAK,GAAMA,EAAK,GAC3BT,EAAI,EACJC,EAAI,EACN,gBAAgB8D,GACd,MAAMS,EAAOT,EAAI,GAAK,EAAI,EAE1B,OAASrF,KAAKQ,KAAK,EAAI,EAAIsF,EAAOT,GAAKS,EAAQ,GAC7C,OACExE,GAAKuE,EACL,MACF,OACEtE,GAZG,EAaH,MACF,OACED,GAAKuE,EACL,MACF,QACEtE,GAlBG,EAqBP,MAAO,CAACD,EAAGC,eCncCwE,EAAOC,EAAOrF,GAC5B,OAAOqF,EAAMhG,KAAKiG,MAAMtF,IAAWqF,EAAMtE,SAgC3C,SAAgBwE,EAAYC,GAC1B,OAAUA,EAAKpE,KAAP,KAGV,SAAgBqE,EAAQD,GACtB,OAAOA,EAAK/F,KAGd,SAAgBiG,EAAaF,GAI3B,MAHmB,aAAYA,EAAK7E,MAAM6E,EAAK5E,MAEtB,iBAAhB4E,EAAK/D,OAAuB,UAAS+D,EAAK/D,UAAY,aCuEjDkE,GAAOC,UACrBA,EADqBC,SAErBA,EAFqBC,QAGrBA,EAHqBC,UAIrBA,EAJqB3E,KAKrBA,EALqB4E,MAMrBA,IAEA,MAEMC,cACJA,EADIC,oBAEJA,EAFIC,WAGJA,EAHIC,UAIJA,EAJIC,UAKJA,EALIC,WAMJA,EANI/D,QAOJA,EAPIgE,WAQJA,EARIC,UASJA,EATIC,eAUJA,EAVIC,OAWJA,EAXIC,MAYJA,GACEb,EAEEc,EAAcZ,EACjBa,SACAC,KAAK,CAACnG,EAAGC,IAAMmG,EAAWpG,EAAEb,MAAOc,EAAEd,QACrC6D,MAAM,EAAGkC,GAEN7F,EAASgH,EACbf,EAAgBM,GAAc,gBAAkB,MAGlD,IAAIU,EAEFA,EADEf,EFrIN,WACM9E,IAAAA,EAAO,CAAC,IAAK,KACf3B,EAAOF,EACP0B,EAAOvB,EACPwH,EAAWtH,EACXwG,EAAYzG,EACZ2G,EAAa3G,EACb8B,EAAS1B,EACTwC,EAAUtC,EACVyG,EAASlC,EACTwB,EAAQ,GACRmB,EAAeC,SACfC,EAAQC,EAAS,OAAQ,OAEzBtH,EAASX,KAAKW,OACdiH,EAAQ,GACRM,EAAS5C,EAEP6C,GAAS,EAuGb,SAASC,EAAM3D,EAAOD,EAAKQ,GACzB,IAOEqD,EACAxC,EACAyC,EARAC,EAAS/D,EAAIlD,EACbkH,EAAShE,EAAIjD,EACbkH,EAAWzI,KAAKQ,KAAKuB,EAAK,GAAKA,EAAK,GAAKA,EAAK,GAAKA,EAAK,IACxD2G,EAAIrB,EAAOtF,GACX4G,EAAKhI,IAAW,GAAM,GAAK,EAC3B0E,GAAKsD,EAKP,MAAQN,EAAOK,EAAGrD,GAAKsD,MACrB9C,IAAOwC,EAAK,GACZC,IAAOD,EAAK,KAERrI,KAAK4I,IAAI5I,KAAK8C,IAAI+C,GAAK7F,KAAK8C,IAAIwF,KAAQG,KAK5C,GAHAjE,EAAIlD,EAAIiH,EAAS1C,EACjBrB,EAAIjD,EAAIiH,EAASF,IAGf9D,EAAIlD,EAAIkD,EAAIb,GAAK,GACjBa,EAAIjD,EAAIiD,EAAIZ,GAAK,GACjBY,EAAIlD,EAAIkD,EAAIf,GAAK1B,EAAK,IACtByC,EAAIjD,EAAIiD,EAAId,GAAK3B,EAAK,IAInBiD,GAAWT,EAAaC,EAAKC,EAAO1C,EAAK,KACvCiD,MAqPS6D,EArPcrE,GAuP9BlD,EAAIuH,EAAEpF,IAFaqF,EArPgB9D,GAuPtB,GAAG1D,GAClBuH,EAAEvH,EAAIuH,EAAElF,GAAKmF,EAAE,GAAGxH,GAClBuH,EAAEtH,EAAIsH,EAAEnF,GAAKoF,EAAE,GAAGvH,GAClBsH,EAAEtH,EAAIsH,EAAEjF,GAAKkF,EAAE,GAAGvH,IA1P4B,CACxC,IAQEoD,EARE1D,EAASuD,EAAIvD,OACfe,EAAIwC,EAAItC,OAAS,EACjBwC,EAAK3C,EAAK,IAAM,EAChB6C,EAAKJ,EAAIlD,GAAKU,GAAK,GACnB6C,EAAU,IAALD,EACLE,EAAM,GAAKD,EACX1C,EAAIqC,EAAId,GAAKc,EAAIZ,GACjBtC,GAAKkD,EAAIjD,EAAIiD,EAAIZ,IAAMc,GAAME,GAAM,GAErC,IAAK,IAAIR,EAAI,EAAGA,EAAIjC,EAAGiC,IAAK,CAC1BO,EAAO,EACP,IAAK,IAAIV,EAAI,EAAGA,GAAKjC,EAAGiC,IACtBQ,EAAMnD,EAAI2C,IACPU,GAAQG,GAAQb,EAAIjC,GAAK2C,EAAO1D,EAAOmD,EAAIpC,EAAIiC,MAAQY,EAAK,GAEjEvD,GAAKoD,EAGP,cADOF,EAAIvD,UAmOrB,IAAsB4H,EAAGC,EA9NrB,SA0DF,OApNAlB,EAAMM,OAAS,SAASa,GACtB,OAAOC,UAAUtH,QAAWwG,EAASzC,EAAQsD,GAAKnB,GAASM,GAG7DN,EAAMqB,MAAQ,WACZ,IAAInI,EAiFN,SAAoBoH,GAClBA,EAAOhG,MAAQgG,EAAO5E,OAAS,EAC/B,MAAMlC,EAAQpB,KAAKQ,KACjB0H,EAAOgB,WAAW,MAAMnF,aAAa,EAAG,EAAG,EAAG,GAAGhD,KAAKW,QAAU,GAElEwG,EAAOhG,MAAQ,KAAYd,EAC3B8G,EAAO5E,OAlHJ,KAkHkBlC,EAErB,MAAMD,EAAU+G,EAAOgB,WAAW,MAIlC,OAHA/H,EAAQgI,UAAYhI,EAAQiI,YAAc,MAC1CjI,EAAQkI,UAAY,SAEb,CAAElI,QAASA,EAASC,MAAOA,GA7FZ8H,CAAWhB,KAC/BzD,EA6ZM,IAAI6E,aA7ZSvH,EAAK,IAAM,GAAKA,EAAK,IACxCiD,EAAS,KAGTuE,EAAO,GACPxI,EAAO4F,EACJ6C,IAAI,SAASrJ,EAAG8D,GAQf,OAPA9D,EAAEC,KAAOA,EAAKqJ,KAAKC,KAAMvJ,EAAG8D,GAC5B9D,EAAEyB,KAAOA,EAAK6H,KAAKC,KAAMvJ,EAAG8D,GAC5B9D,EAAE0B,MAAQkF,EAAU0C,KAAKC,KAAMvJ,EAAG8D,GAClC9D,EAAE2B,OAASmF,EAAWwC,KAAKC,KAAMvJ,EAAG8D,GACpC9D,EAAEiC,OAASA,EAAOqH,KAAKC,KAAMvJ,EAAG8D,GAChC9D,EAAE4B,OAAS8F,EAAS4B,KAAKC,KAAMvJ,EAAG8D,GAClC9D,EAAE+C,QAAUA,EAAQuG,KAAKC,KAAMvJ,EAAG8D,GAC3B9D,IAERsH,KAAK,SAASoB,EAAGC,GAChB,OAAOA,EAAE/G,KAAO8G,EAAE9G,OA8CxB,OAFA4H,WAAW,IAfX,SAASC,EAAK3F,GACZ,MACM4F,EADO,GACA5F,EACP6F,EAAK9J,KAAK4I,IAFH,IAEQ3E,EAAI,GAAW0C,EAAMjF,SA3B5C,SAAmBmI,EAAMC,GACvB,IAAK,IAAI7F,EAAI4F,EAAM5F,EAAI6F,EAAI7F,GAAK,EAAG,CACjC,MAAM9D,EAAIY,EAAKkD,GACf9D,EAAEmB,EAAKS,EAAK,IAAMpB,IAAW,KAAS,EACtCR,EAAEoB,EAAKQ,EAAK,IAAMpB,IAAW,KAAS,EACtCE,EAAYC,EAAiBX,EAAGY,EAAMkD,GAClC9D,EAAE0D,SAAWuE,EAAM3D,EAAOtE,EAAG6E,KAC/BuE,EAAKQ,KAAK5J,GACV6H,EAAMyB,KAAK,OAAQ7B,EAAOzH,GACtB6E,EAAQD,EAAYC,EAAQ7E,GAE9B6E,EAAS,CACP,CAAE1D,EAAGnB,EAAEmB,EAAInB,EAAEwD,GAAIpC,EAAGpB,EAAEoB,EAAIpB,EAAEyD,IAC5B,CAAEtC,EAAGnB,EAAEmB,EAAInB,EAAEsD,GAAIlC,EAAGpB,EAAEoB,EAAIpB,EAAEuD,KAGhCvD,EAAEmB,GAAKS,EAAK,IAAM,EAClB5B,EAAEoB,GAAKQ,EAAK,IAAM,IAWtBiI,CAAUH,EAAMC,GACZ3B,IAGA2B,EAAKnD,EAAMjF,OACbiI,WAAW,IAAMC,EAAK3F,EAAI,GAAI,IAE9B2D,EAAMqC,OACNjC,EAAMyB,KAAK,MAAO7B,EAAO2B,EAAMvE,KAGlB4E,CAAK,GAAI,GAEnBhC,GAGTA,EAAMsC,OAAS,KACb/B,GAAS,EACFP,GAGTA,EAAMqC,KAAO,WAMX,OALA9B,GAIS,EACFP,GA0ETA,EAAME,aAAe,SAASiB,GAC5B,OAAOC,UAAUtH,QACXoG,EAAoB,MAALiB,EAAYhB,SAAWgB,EAAInB,GAC5CE,GAGNF,EAAMjB,MAAQ,SAASoC,GACrB,OAAOC,UAAUtH,QAAWiF,EAAQoC,EAAInB,GAASjB,GAGnDiB,EAAM7F,KAAO,SAASgH,GACpB,OAAOC,UAAUtH,QAAWK,EAAO,EAAEgH,EAAE,IAAKA,EAAE,IAAMnB,GAAS7F,GAG/D6F,EAAMhG,KAAO,SAASmH,GACpB,OAAOC,UAAUtH,QAAWE,EAAO6D,EAAQsD,GAAKnB,GAAShG,GAG3DgG,EAAMb,UAAY,SAASgC,GACzB,OAAOC,UAAUtH,QAAWqF,EAAYtB,EAAQsD,GAAKnB,GAASb,GAGhEa,EAAMX,WAAa,SAAS8B,GAC1B,OAAOC,UAAUtH,QAAWuF,EAAaxB,EAAQsD,GAAKnB,GAASX,GAGjEW,EAAMxF,OAAS,SAAS2G,GACtB,OAAOC,UAAUtH,QAAWU,EAASqD,EAAQsD,GAAKnB,GAASxF,GAG7DwF,EAAMxH,KAAO,SAAS2I,GACpB,OAAOC,UAAUtH,QAAWtB,EAAOqF,EAAQsD,GAAKnB,GAASxH,GAG3DwH,EAAMP,OAAS,SAAS0B,GACtB,OAAOC,UAAUtH,QAAW2F,EAAS3B,EAAQqD,IAAMA,EAAInB,GAASP,GAGlEO,EAAMC,SAAW,SAASkB,GACxB,OAAOC,UAAUtH,QAAWmG,EAAWpC,EAAQsD,GAAKnB,GAASC,GAG/DD,EAAM1E,QAAU,SAAS6F,GACvB,OAAOC,UAAUtH,QAAWwB,EAAUuC,EAAQsD,GAAKnB,GAAS1E,GAG9D0E,EAAMjH,OAAS,SAASoI,GACtB,OAAOC,UAAUtH,QAAWf,EAASoI,EAAInB,GAASjH,GAGpDiH,EAAMuC,GAAK,WACT,MAAM1J,EAAQuH,EAAMmC,GAAGC,MAAMpC,EAAOgB,WACpC,OAAOvI,IAAUuH,EAAQJ,EAAQnH,GAG5BmH,EElGGyC,GAEAC,IAGV1C,EACG7F,KAAKA,GAELmB,QAAQA,GACRyD,MAAM4D,EAAUhD,IAChBnF,OAAO,SACYoI,IAAdrD,EAE8B,OAAV,EAAXxG,KAAgB,YDpHZwG,EAAWC,EAAgBzG,GAChD,GAAIwG,EAAY,EACd,SAGF,IAAIsD,EAAS,GACb,GAAkB,IAAdtD,EACFsD,EAAS,CAACrD,EAAe,QACpB,CACLqD,EAAS,IAAIrD,GACb,MAAMsD,GAAatD,EAAe,GAAKA,EAAe,KAAOD,EAAY,GACzE,IAAIwD,EAAQvD,EAAe,GAAKsD,EAChC,KAAOC,EAAQvD,EAAe,IAC5BqD,EAAOV,KAAKY,GACZA,GAASD,EAIb,OAAO3E,EAAO0E,EAAQ9J,GCqGXyB,CAAO+E,EAAWC,EAAgBzG,IAE1C0G,OAAOA,GACP1G,OAAOA,GACPP,KAAKgG,GACLxE,KAAKkF,GACLC,UAAUA,GACVE,WAAWA,GAEd,SAAS2D,EAAK5D,EAAW6D,EAAW,GAC9BhE,GACFe,EAAMsC,SAGRtC,EACGC,SAAS1B,GD5KhB,SAA6BQ,EAAOK,EAAWM,GAC7C,MAAMwD,EAAUlC,EAAIjC,EAAOR,GAAQ4E,OAAO5E,EAAK1F,QACzCuK,EAAUnI,EAAI8D,EAAOR,GAAQ4E,OAAO5E,EAAK1F,QAC/C,IAAIwK,EACJ,OAAQ3D,GACN,IAAK,MACH2D,EAAgBC,EAChB,MACF,IAAK,OACHD,EAAgBE,EAChB,MACF,IAAK,SACL,QACEF,EAAgBG,EAOpB,OAHkBH,IACfI,OAAO,CAACP,EAASE,IACjBM,MAAMtE,GC0JeuE,CAAahE,EAAaP,EAAWM,EAChDkE,CAAUrF,EAAK1F,QAEvB0J,GAAG,MAAOsB,IAKT,GACElE,EAAY7F,SAAW+J,EAAc/J,QACrCmJ,GAtEoB,GAuEpB,CAvEoB,KAwEhBA,GACFa,QAAQC,KACL,oBAAmBpE,EAAY7F,OAC9B+J,EAAc/J,wBAAwBmJ,yIAI5C,MAAMe,EAAc5L,KAAK6C,IA9EX,IA8EemE,EAAU,GAAoB,GAM3D4D,EAAK,CAACgB,EALc5L,KAAK6C,IA/EX,IAgFZmE,EAAU,GACV4E,IAG+Bf,EAAW,kBAjM/BtE,UAAEA,EAAFE,QAAaA,EAAb9F,OAAsBA,EAAtB+F,UAA8BA,EAA9BC,MAAyCA,IAC9D,MAAMkF,aACJA,EADIC,eAEJA,EAFIC,YAGJA,EAHIC,gBAIJA,EAJIC,eAKJA,GACE1F,GACE2F,OACJA,EADIC,cAEJA,EAFIpF,UAGJA,EAHIE,WAIJA,EAJImF,eAKJA,EALIC,eAMJA,GACE5F,GACEK,WAAEA,EAAFwF,mBAAcA,GAAuB7F,EAE3C,SAAS8F,EAAQpG,GACf,OAAO0F,EAAeA,EAAa1F,GAAQJ,EAAOmG,EAAQvL,GAI5D,IAAI6L,EACa9F,EAAU+F,UAAU,QAAQ1L,KAAK4F,GACzC+F,KACPC,IACE,IAAIvM,EAAOuM,EACRC,OAAO,QACPzC,GAAG,QAAShE,IACP4F,GACFA,EAAY5F,EAAM6B,KAGrBmC,GAAG,YAAahE,IACXgG,IACFK,EAAkBK,EAAM7E,EAAM8E,OAAQ,CACpCC,UAAW,QACXC,OAAO,EACPC,QAAS,IAAMnB,EAAe3F,MAC3BkG,KAIHL,GACFA,EAAgB7F,EAAM6B,KAGzBmC,GAAG,WAAYhE,IACVqG,GACFA,EAAgBU,UAGdjB,GACFA,EAAe9F,EAAM6B,KAGxBmF,KAAK,SAAUpB,EAAc,UAAY,WACzCoB,KAAK,OAAQZ,GACbY,KAAK,cAAerG,GACpBqG,KAAK,aAAcpG,GACnBoG,KAAK,cAAelG,GACpBkG,KAAK,cAAe,UACpBA,KAAK,YAAa,6BAES,iBAAnBf,GACTgB,OAAOC,KAAKjB,GAAgBkB,QAAQC,IAClCnN,EAAOA,EAAK+M,KAAKI,EAAKnB,EAAemB,MAIzCnN,EAAOA,EAAKqJ,KAAKkD,GACfA,EACGa,aACAC,SAASnB,GACTa,KAAK,YAAajH,GAClBiH,KAAK,YAAa9G,GAClBjG,KAAKgG,KAGZsH,IACEA,EACGF,aACAC,SAASnB,GACTa,KAAK,OAAQZ,GACbY,KAAK,cAAerG,GACpBqG,KAAK,YAAajH,GAClBiH,KAAK,YAAa9G,GAClBjG,KAAKgG,IAEVuH,IACEA,EACGH,aACAC,SAASnB,GACTa,KAAK,eAAgB,GACrBS,WAoGCC,CAAO,CACLtH,UAAAA,EACAE,QAAAA,EACA9F,OAAAA,EACA+F,UAAAA,EACAC,MAAO8E,MAIZxC,QAGL2B,CAAK5D,GC3NM8G,MAAAA,EAAmB,CAC9BhC,eAAgB,EAAG1L,KAAAA,EAAMK,MAAAA,KAAa,GAAEL,MAASK,MAGtCsN,EAAiB,CAC5B7B,OFHOZ,EAAM,IACV9B,IAAIwE,GAAUA,EAAOC,YACrBzE,IAAI0E,EAAaC,IEEpBvH,eAAe,EACfC,qBAAqB,EACrBsF,eAAe,EACfrF,WAAY,kBACZE,UAAW,CAAC,EAAG,IACfD,UAAW,SACXE,WAAY,SACZ/D,QAAS,EACTkE,eAAgB,EAAE,GAAI,IACtBE,MAAO,OACPD,OAAQ,cACRgF,eAAgB,GAChBC,mBAAoB,KAGtB,SAAS8B,GAAe7H,UACtBA,EADsBC,SAEtBA,EAAW,IAFWsE,QAGtBA,EAHsBrE,QAItBA,EACA1E,KAAMsM,EALgB1H,MAMtBA,KACG2H,IAEH,MAAMC,EAAkB,IAAKT,KAAqBvH,GAC5CiI,EAAgB,IAAKT,KAAmBtH,IAEvCgI,EAAK/H,EAAW3E,YCpCiB+I,EAASuD,EAAaK,GAC9D,MAAMC,EAAaC,KACZ7M,EAAM8M,GAAWC,EAAST,IAC1B3H,EAAWqI,GAAgBD,EAAS,MA8D3C,OA5DAE,EAAU,KACR,MAAMC,EAAUN,EAAWO,QAG3B,IAAIC,EAAMC,EAAOH,GACdrC,OAAO,OACP/K,MAAM,UAAW,SAES,iBAAlB6M,GACTtB,OAAOC,KAAKqB,GAAepB,QAAQC,IACjC4B,EAAMA,EAAIhC,KAAKI,EAAKmB,EAAcnB,MAItC,MAAM7G,EAAYyI,EAAIvC,OAAO,KAG7B,SAASyC,EAAWnN,EAAOoB,GACzB6L,EAAIhC,KAAK,SAAU7J,GAAQ6J,KAAK,QAASjL,GACzCwE,EAAUyG,KAAK,YAAc,aAAYjL,EAAQ,MAAMoB,EAAS,MAChEuL,EAAQ,CAAC3M,EAAOoB,IALlByL,EAAarI,GAQb,IAAIxE,EAAQ,EACRoB,EAAS,OACOkH,IAAhB6D,GAEFnM,EAAQ+M,EAAQK,cAAcC,YAC9BjM,EAAS2L,EAAQK,cAAcE,eAG9BtN,EAAOoB,GAAU+K,EAGpBnM,EAAQlC,KAAK6C,IAAIX,EAAO4I,EAAQ,IAChCxH,EAAStD,KAAK6C,IAAIS,EAAQwH,EAAQ,IAClCuE,EAAWnN,EAAOoB,GAGlB,MAAMmM,EAAiB,IAAIC,EAAeC,IACxC,GAAKA,GAA8B,IAAnBA,EAAQjO,aAIJ8I,IAAhB6D,EAA2B,CAC7B,MAAMnM,MAAEA,EAAFoB,OAASA,GAAWqM,EAAQ,GAAGC,YACrCP,EAAWnN,EAAOoB,MAMtB,OAHAmM,EAAeI,QAAQZ,GAGhB,KACLQ,EAAeK,UAAUb,GACzBG,EAAOH,GACJxC,UAAU,KACVmB,WAEJ,CAACS,EAAavD,EAAS4D,IAEnB,CAACC,EAAYjI,EAAW3E,GD7BAgO,CAC7BjF,EACAuD,EACA5H,EAAQiI,eAGJb,EAASe,EAAOoB,EAAS1J,EAAQ,MAevC,OAbA0I,EAAU,KACJtI,GACFmH,EAAOqB,QAAQ,CACb3I,UAAWgI,EACX/H,SAAAA,EACAC,QAAS+H,EACT9H,UAAAA,EACA3E,KAAAA,EACA4E,MAAAA,KAGH,CAACH,EAAU+H,EAAiBC,EAAe9H,EAAW3E,EAAM4E,IAExDsJ,yCAAUxB,QAAY,CAAEnL,OAAQ,OAAQpB,MAAO,SAAcoM,IAGtEF,EAAe8B,aAAe,CAC5B3J,UAAWuH,EACXtH,SAAU,IACVsE,QAAS,CAAC,IAAK,KACfrE,QAASsH"}